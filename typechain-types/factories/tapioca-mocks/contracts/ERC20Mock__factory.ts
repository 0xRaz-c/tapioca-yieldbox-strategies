/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../tapioca-mocks/contracts/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101608060405234620006a457620022908038038091620000218285620006a9565b8339810160a082820312620006a45781516001600160401b038111620006a457816200004f918401620006f2565b602083015190916001600160401b038211620006a45762000072918401620006f2565b90604083015160608401519360ff8516809503620006a45760800151926001600160a01b0384168403620006a45760408051949085016001600160401b038111868210176200056d5760405260018552603160f81b6020860190815284519095906001600160401b0381116200056d57600354600181811c9116801562000699575b60208210146200068357601f811162000619575b50806020601f82116001146200058f5760009162000583575b508160011b916000199060031b1c1916176003555b82516001600160401b0381116200056d576004938454600181811c9116801562000562575b60208210146200054d579081601f849311620004f5575b50602090601f83116001146200048a576000926200047e575b50508160011b916000199060031b1c19161783555b620001ab8562000796565b95610120968752620001bd826200093b565b9561014096875260208151910120918260e052519020610100978189524660a0526040519160208301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8552604084015260608301524660808301523060a083015260a0825260c082019282841060018060401b03851117620004695783604052825190206080523060c05262000255336200074d565b8060ff19600c541617600c55604d81116200045457600a0a6103e890808202918204036200045457600b55600954336001600160a01b0390911603620004115750506001600160a01b03811615620003be57620002b2906200074d565b30156200037a5760025490828201809211620003655750600255306000526000602052604060002081815401905560405190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203093a38261ff0019600c541617600c55604051916117fd938462000a9385396080518461147c015260a05184611548015260c05184611446015260e051846114cb015251836114f1015251826107120152518161073c0152f35b601190634e487b7160e01b6000525260246000fd5b60649060206040519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b60405162461bcd60e51b8152602081840152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b907f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657261010460649362461bcd60e51b8452602060c4820152602060e48201520152fd5b601185634e487b7160e01b6000525260246000fd5b604186634e487b7160e01b6000525260246000fd5b0151905038806200018b565b6000878152602081209350601f198516905b818110620004dc5750908460019594939210620004c2575b505050811b018355620001a0565b015160001960f88460031b161c19169055388080620004b4565b929360206001819287860151815501950193016200049c565b909150856000526020600020601f840160051c8101916020851062000542575b90601f859493920160051c01905b81811062000532575062000172565b6000815584935060010162000523565b909150819062000515565b602286634e487b7160e01b6000525260246000fd5b90607f16906200015b565b634e487b7160e01b600052604160045260246000fd5b90508601513862000121565b6003600090815292507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b905b601f198316841062000600576001935082601f19811610620005e6575b5050811b0160035562000136565b88015160001960f88460031b161c191690553880620005d8565b88810151825560209384019360019092019101620005bb565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841062000678575b601f0160051c01905b8181106200066b575062000108565b600081556001016200065c565b909150819062000653565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000f4565b600080fd5b601f909101601f19168101906001600160401b038211908210176200056d57604052565b60005b838110620006e15750506000910152565b8181015183820152602001620006d0565b81601f82011215620006a45780516001600160401b0381116200056d576040519262000729601f8301601f191660200185620006a9565b81845260208284010111620006a4576200074a9160208085019101620006cd565b90565b600980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b8051602091908281101562000816575090601f825111620007d45780825192015190808310620007c557501790565b82600019910360031b1b161790565b604490620008089260405193849263305a27a960e01b845280600485015282519283918260248701528686019101620006cd565b601f01601f19168101030190fd5b6001600160401b0381116200056d576005928354926001938481811c9116801562000930575b838210146200068357601f8111620008f9575b5081601f84116001146200088f575092829391839260009462000883575b50501b916000199060031b1c191617905560ff90565b0151925038806200086d565b919083601f1981168760005284600020946000905b88838310620008de5750505010620008c4575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080620008b7565b858701518855909601959485019487935090810190620008a4565b8560005284601f846000209201871c820191601f8601881c015b828110620009235750506200084f565b6000815501859062000913565b90607f16906200083c565b805160209081811015620009685750601f825111620007d45780825192015190808310620007c557501790565b906001600160401b0382116200056d57600654926001938481811c9116801562000a87575b838210146200068357601f811162000a4d575b5081601f8411600114620009e15750928293918392600094620009d5575b50501b916000199060031b1c19161760065560ff90565b015192503880620009be565b919083601f198116600660005284600020946000905b8883831062000a32575050501062000a18575b505050811b0160065560ff90565b015160001960f88460031b161c1916905538808062000a0a565b858701518855909601959485019487935090810190620009f7565b600660005284601f84600020920160051c820191601f860160051c015b82811062000a7a575050620009a0565b6000815501859062000a6a565b90607f16906200098d56fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816306fdde0314610ddf57508063095ea7b314610db557806318160ddd14610d965780631d0dc26714610d5e57806321442ec914610d2657806322ae81af14610d0857806323b872dd14610c3e5780632e1a7d4d14610a9e578063313ce56714610a7c5780633644e51514610a585780633950935114610a08578063449a52f8146109db57806370a08231146109a4578063715018a6146109475780637c928fe9146108505780637ecebe001461081857806384b0196e146106fb5780638da5cb5b146106d257806395d89b41146105e8578063996517cf146105c9578063a457c2d714610522578063a9059cbb146104f1578063d0e30db0146104ad578063d4a744ba14610486578063d505accf146102d0578063d6b5a2db146102a6578063dd62ed3e1461025d578063e01d55c5146102375763f2fde38b03610011573461023357602036600319011261023357610182610ef0565b9061018b610f21565b6001600160a01b039182169283156101e1575050600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b83823461025957602036600319011261025957610252610f21565b35600b5580f35b5080fd5b5050346102595780600319360112610259578060209261027b610ef0565b610283610f0b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b838234610259576020366003190112610259576102cd906102c5610f21565b35333061102a565b80f35b508290346102595760e0366003190112610259576102ec610ef0565b6102f4610f0b565b906044359260643560843560ff811681036104825781421161043f5760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff82111761042c578b525190206103d7916103cf916103a9611443565b908c519161190160f01b83526002830152602282015260c43591604260a43592206113b4565b91909161129a565b16036103e957506102cd939450611198565b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50503461025957816003193601126102595760209060ff600c5460081c1690519015158152f35b505081600319360112610259576104c43433611724565b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a280f35b50503461025957806003193601126102595760209061051b610511610ef0565b602435903361102a565b5160018152f35b5082346105c657826003193601126105c65761053c610ef0565b918360243592338152600160205281812060018060a01b03861682526020522054908282106105755760208561051b8585038733611198565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b505034610259578160031936011261025957602090600b549051908152f35b5090346102335782600319360112610233578051918381549061060a82610f79565b808652926001928084169081156106a7575060011461064b575b6106478686610635828b0383610fe5565b51918291602083526020830190610eb0565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82861061068f57505050610635826020610647958201019438610624565b80546020878701810191909152909501948101610671565b905061064797508693506020925061063594915060ff191682840152151560051b8201019438610624565b50503461025957816003193601126102595760095490516001600160a01b039091168152602090f35b5090346102335782600319360112610233576107367f000000000000000000000000000000000000000000000000000000000000000061156e565b926107607f000000000000000000000000000000000000000000000000000000000000000061166a565b908251926020928385019585871067ffffffffffffffff881117610805575092806107bb8388966107ae998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610eb0565b91898303908a0152610eb0565b924660608801523060808801528460a088015286840360c088015251928381520193925b8281106107ee57505050500390f35b8351855286955093810193928101926001016107df565b634e487b7160e01b845260419052602483fd5b5050346102595760203660031901126102595760209181906001600160a01b03610840610ef0565b1681526007845220549051908152f35b508290346102595760203660031901126102595780359060ff600c5460081c1661088e575b506102cd9192338452600a602052429084205533611724565b600b54821161090457338352600a602052838320546201518081018091116108f15742101561087557606490602085519162461bcd60e51b8352820152601460248201527345524332304d6f636b3a20746f6f206561726c7960601b6044820152fd5b634e487b7160e01b845260118252602484fd5b606490602085519162461bcd60e51b8352820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152fd5b83346105c657806003193601126105c657610960610f21565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102595760203660031901126102595760209181906001600160a01b036109cc610ef0565b16815280845220549051908152f35b505034610259573660031901126105c6576102cd6109f7610ef0565b6109ff610f21565b60243590611724565b50503461025957806003193601126102595761051b602092610a51610a2b610ef0565b338352600186528483206001600160a01b03821684528652918490205460243590611007565b9033611198565b505034610259578160031936011261025957602090610a75611443565b9051908152f35b50503461025957816003193601126102595760209060ff600c54169051908152f35b503461023357602080600319360112610c3a57813591338552848252828486205410610c11573315610bc6573385528482528385205490838210610b7857508290338652858352038385205581600254036002558383518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833392a38380838015610b6e575b8280929181923390f115610b62577f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659192519283523392a280f35b505051903d90823e3d90fd5b6108fc9150610b27565b845162461bcd60e51b8152908101839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60849184519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b60649184519162461bcd60e51b8352820152600560248201526422b93937b960d91b6044820152fd5b8380fd5b5082903461025957606036600319011261025957610c5a610ef0565b610c62610f0b565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610c9c575b60208661051b87878761102a565b848210610cc55750918391610cba6020969561051b95033383611198565b919394819350610c8e565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461025957816003193601126102595760209051620151808152f35b5050346102595760203660031901126102595760209181906001600160a01b03610d4e610ef0565b168152600a845220549051908152f35b83346105c657806003193601126105c657610d77610f21565b600c5461ff0060ff8260081c161560081b169061ff00191617600c5580f35b5050346102595781600319360112610259576020906002549051908152f35b50503461025957806003193601126102595760209061051b610dd5610ef0565b6024359033611198565b8490843461023357826003193601126102335782600354610dff81610f79565b80855291600191808316908115610e885750600114610e2b575b50505061063582610647940383610fe5565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610e70575050506106358260206106479582010194610e19565b80546020878701810191909152909501948101610e53565b61064797508693506020925061063594915060ff191682840152151560051b82010194610e19565b919082519283825260005b848110610edc575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ebb565b600435906001600160a01b0382168203610f0657565b600080fd5b602435906001600160a01b0382168203610f0657565b6009546001600160a01b03163303610f3557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c92168015610fa9575b6020831014610f9357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f88565b6040810190811067ffffffffffffffff821117610fcf57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610fcf57604052565b9190820180921161101457565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561114557169182156110f4576000828152806020526040812054918083106110a057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561124957169182156111f95760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b600581101561139e57806112ab5750565b600181036112f85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036113455760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461134e57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116114375791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561142a5781516001600160a01b03811615611424579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611545575b1561149e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610fcf5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611475565b60ff81146115ac5760ff811690601f821161159a576040519161159083610fb3565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516005548160006115bf83610f79565b8083529260019081811690811561164857506001146115e9575b506115e692500382610fe5565b90565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b84831061162d57506115e69350508101602001386115d9565b81935090816020925483858901015201910190918492611614565b9050602092506115e694915060ff191682840152151560051b820101386115d9565b60ff811461168c5760ff811690601f821161159a576040519161159083610fb3565b5060405160065481600061169f83610f79565b8083529260019081811690811561164857506001146116c557506115e692500382610fe5565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b84831061170957506115e69350508101602001386115d9565b819350908160209254838589010152019101909184926116f0565b6001600160a01b0316908115611782577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082611766600094600254611007565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fdfea264697066735822122013b004bde26a8423bd2f58e39c541a88fcc67bc8ba75f6e5d97d55b8882c0bc464736f6c63430008120033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    decimals_: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      _name,
      _symbol,
      _initialAmount,
      decimals_,
      _owner,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    decimals_: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialAmount,
      decimals_,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
