/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC20WithSupply,
  ERC20WithSupplyInterface,
} from "../../../../../@boringcrypto/boring-solidity/contracts/ERC20.sol/ERC20WithSupply";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c034610095574660a052602081017f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218815246604083015230606083015260608252608082019180831060018060401b0384111761007f5782604052519020608052610969908161009b823960805181610880015260a051816108590152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263095ea7b3146106f95750816318160ddd146106da57816323b872dd146105385781633644e5151461051457816370a08231146104dd5781637ecebe00146104a5578163a9059cbb146103cc578163d505accf146100d3575063dd62ed3e1461008857600080fd5b346100cf57806003193601126100cf57806020926100a4610769565b6100ac610784565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b919050346103c85760e03660031901126103c8576100ef610769565b6100f7610784565b9160443590606435946084359360ff85168095036103c4576001600160a01b03908116958615610381578742101561034d5786895260209560028752848a20988954996000198b1461033a5760018b01905585519084898301947f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c986528b89850152169a8b606084015288608084015260a083015260c082015260c0815260e081019067ffffffffffffffff9381831085841117610327578288528151902061012082018381108682111761031457908a9392918952600283528d6101009261190160f01b848201526101e8610854565b938b5196879651935b8481106102fd575050505083018b81019290925288820152038087018252607f01601f19168101928311818410176102ea57828b926080928a95895285815191012082528482015260a4358782015260c435606082015282805260015afa156102e05785908851160361029f5750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259291848752600183528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152601860248201527f45524332303a20496e76616c6964205369676e617475726500000000000000006044820152fd5b82513d89823e3d90fd5b634e487b7160e01b8b526041855260248bfd5b8381018301518982018301528897508f91016101f1565b634e487b7160e01b8e526041885260248efd5b634e487b7160e01b8d526041875260248dfd5b634e487b7160e01b8c526011865260248cfd5b835162461bcd60e51b8152602081850152600e60248201526d115490cc8c0e88115e1c1a5c995960921b6044820152606490fd5b835162461bcd60e51b8152602081850152601860248201527f45524332303a204f776e65722063616e6e6f74206265203000000000000000006044820152606490fd5b8780fd5b8280fd5b5050346100cf57806003193601126100cf576020916103e9610769565b82602435928315801590610493575b610428575b50519182526001600160a01b0316903390600080516020610914833981519152908590a35160018152f35b3381528086528181205461043e8582101561079a565b6001600160a01b03841690853383900361045b575b5050506103fd565b61046f9161046a8415156107df565b610824565b33835282885283832055815220610487838254610847565b90558238808085610453565b50336001600160a01b038416146103f8565b5050346100cf5760203660031901126100cf5760209181906001600160a01b036104cd610769565b1681526002845220549051908152f35b5050346100cf5760203660031901126100cf5760209181906001600160a01b03610505610769565b16815280845220549051908152f35b5050346100cf57816003193601126100cf57602090610531610854565b9051908152f35b8284346106d75760603660031901126106d757610553610769565b9061055c610784565b6044359182610598575b508351918252602094506001600160a01b03908116921690600080516020610914833981519152908590a35160018152f35b6001600160a01b038481168083526020838152878420549198929091906105c18783101561079a565b851692838a036105d5575b50505050610566565b8985526001835288852033865283528885205490600019820361063f575b50509282602099828a9461061e8a8e9961046a6000805160206109148339815191529c9a15156107df565b9282525283832055815220610634858254610847565b9055918780806105cc565b878210610694575092602099858a9461061e8a8e999661066f826000805160206109148339815191529d9b610824565b86865260018552898620338752855289862055965050509450955099819496506105f3565b895162461bcd60e51b8152908101849052601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152606490fd5b80fd5b5050346100cf57816003193601126100cf576020906003549051908152f35b915050346103c857816003193601126103c8579160209282610719610769565b92602435918291338152600188528181209560018060a01b0316958682528852205581527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b600435906001600160a01b038216820361077f57565b600080fd5b602435906001600160a01b038216820361077f57565b156107a157565b60405162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b6044820152606490fd5b156107e657565b60405162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b6044820152606490fd5b9190820391821161083157565b634e487b7160e01b600052601160045260246000fd5b9190820180921161083157565b6000467f0000000000000000000000000000000000000000000000000000000000000000036108a257507f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101917f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218835246604083015230606083015260608252608082019082821067ffffffffffffffff8311176108ff575060405251902090565b634e487b7160e01b81526041600452602490fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122065840819b76ffbeb63fb48d566333ca611cb02ee4784d5a2088c036954c2639464736f6c63430008120033";

type ERC20WithSupplyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20WithSupplyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20WithSupply__factory extends ContractFactory {
  constructor(...args: ERC20WithSupplyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20WithSupply> {
    return super.deploy(overrides || {}) as Promise<ERC20WithSupply>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20WithSupply {
    return super.attach(address) as ERC20WithSupply;
  }
  override connect(signer: Signer): ERC20WithSupply__factory {
    return super.connect(signer) as ERC20WithSupply__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WithSupplyInterface {
    return new utils.Interface(_abi) as ERC20WithSupplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20WithSupply {
    return new Contract(address, _abi, signerOrProvider) as ERC20WithSupply;
  }
}
