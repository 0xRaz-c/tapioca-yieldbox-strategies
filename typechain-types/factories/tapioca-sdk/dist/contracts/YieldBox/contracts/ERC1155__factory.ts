/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../../tapioca-sdk/dist/contracts/YieldBox/contracts/ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657610b44908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162fdd58e146107ce5750806301ffc9a7146107615780630e89341c146106cd5780632eb2c2d61461047b5780634e1273f41461031f578063a22cb4651461029b578063bd85b03914610274578063e985e9c5146102235763f242432a1461008557600080fd5b3461021f5760a036600319011261021f5761009e61080b565b836100a7610826565b608435926064359060443567ffffffffffffffff861161021b576100ef7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62963690890161086d565b9590946100fb84610a59565b6001600160a01b0381811694610112861515610a04565b169081835284828c60209b8c916001835280882089895283528088206101398c8254610a3f565b90558488526001835280882089895283528088206101588c8254610a4c565b90558a8151938a85528401523392a43b610170575080f35b6101af88968b519889978896879563f23a6e6160e01b9e8f8852339088015260248701526044860152606485015260a0608485015260a48401916109a2565b03925af1918215610211576101d8945085926101e4575b50506001600160e01b031916146109c3565b38808080808080808880f35b6102039250803d1061020a575b6101fb81836108e7565b810190610982565b38806101c6565b503d6101f1565b84513d87823e3d90fd5b8480fd5b8280fd5b50503461027057806003193601126102705760ff8160209361024361080b565b61024b610826565b6001600160a01b03918216835282875283832091168252855220549151911615158152f35b5080fd5b503461021f57602036600319011261021f5760209282913581526002845220549051908152f35b5050346102705780600319360112610270576102b561080b565b906024359081151580920361031b57338452836020528084209260018060a01b03169283855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8380fd5b5082903461027057826003193601126102705767ffffffffffffffff91813583811161027057610352903690840161083c565b919093602490813590811161021f579184869261037389953690840161083c565b94909261038186891461089b565b61038a8861091f565b93610397885195866108e7565b8885526103a38961091f565b602099868b019891601f1901368a37875b8181106103fd575050505050505083519485948186019282875251809352850193925b8281106103e657505050500390f35b8351855286955093810193928101926001016103d7565b61040e8183889e9b9a9c9d9e61095c565b356001600160a01b03811690819003610477578852600189528b882061043582858761095c565b35895289528b8820548a51821015610465579061045a918a8260051b8d010152610937565b9a999896979a6103b4565b634e487b7160e01b8952603286528789fd5b8880fd5b503461021f5760031960a03682011261031b5761049661080b565b61049e610826565b9067ffffffffffffffff906044358281116106c9576104c0903690870161083c565b9290946064358281116106c5576104da903690890161083c565b926084359081116106c157906104f68897949236908b0161086d565b92909461050482891461089b565b61050d87610a59565b6001600160a01b03818116998a918f918f9161052a851515610a04565b839b169a8b935b8d8083106106535761057092507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb939150845194808652850191610aea565b918083036020820152806105863394898b610aea565b0390a43b610592578b80f35b8a51988997889763bc197c8160e01b9c8d8a5233908a015260248901526044880160a0905260a48801906105c592610aea565b90848783030160648801526105d992610aea565b918483030160848501526105ec926109a2565b0381875a94602095f19081156106465761061993508491610628575b506001600160e01b031916146109c3565b38808080808080808080808b80f35b610640915060203d811161020a576101fb81836108e7565b38610608565b50505051903d90823e3d90fd5b95610669836106b5986106ae969897959861095c565b3590610676878b8d61095c565b3595835260016020918183528585208486528352858520610698898254610a3f565b9055845281528383209183525220918254610a4c565b9055610937565b878d8f8c938e91610531565b8a80fd5b8980fd5b8780fd5b503461021f576020928360031936011261075e578251918483019083821067ffffffffffffffff83111761074b575083949291945283815282519382859384528251928382860152825b84811061073557505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610717565b634e487b7160e01b835260419052602482fd5b80fd5b503461021f57602036600319011261021f57359063ffffffff60e01b821680920361021f57602092506301ffc9a760e01b82149182156107bd575b82156107ac575b50519015158152f35b6303a24d0760e21b149150386107a3565b636cdb3d1360e11b8114925061079c565b8490843461021f578060031936011261021f576020926001600160a01b036107f461080b565b168152600184528181206024358252845220548152f35b600435906001600160a01b038216820361082157565b600080fd5b602435906001600160a01b038216820361082157565b9181601f840112156108215782359167ffffffffffffffff8311610821576020808501948460051b01011161082157565b9181601f840112156108215782359167ffffffffffffffff8311610821576020838186019501011161082157565b156108a257565b60405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761090957604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116109095760051b60200190565b60001981146109465760010190565b634e487b7160e01b600052601160045260246000fd5b919081101561096c5760051b0190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261082157516001600160e01b0319811681036108215790565b908060209392818452848401376000828201840152601f01601f1916010190565b156109ca57565b60405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606490fd5b15610a0b57565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606490fd5b9190820391821161094657565b9190820180921161094657565b60018060a01b0316338114908115610ae1575b8115610ab7575b5015610a7b57565b60405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606490fd5b90506000526000602052604060002033600052602052600160ff6040600020541615151438610a73565b60009150610a6c565b81835290916001600160fb1b0383116108215760209260051b80928483013701019056fea2646970667358221220fc10dbf9f66a544a7e724e102f4ceb29cbd6601a525d32824c54e57f25580ed064736f6c63430008120033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
