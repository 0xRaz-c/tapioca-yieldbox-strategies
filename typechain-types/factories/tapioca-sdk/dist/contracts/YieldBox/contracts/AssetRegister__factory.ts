/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  AssetRegister,
  AssetRegisterInterface,
} from "../../../../../../tapioca-sdk/dist/contracts/YieldBox/contracts/AssetRegister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "assetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60803461013057608081016001600160401b0381118282101761011a57604052600481526020810190600091828152604082018381526060830191848352600554680100000000000000008110156101065760018101806005558110156100f2576005865260036020872091020193519060058210156100de5784549051610100600160a81b0360089190911b1660ff929092166001600160a81b031990911617178355516001830180546001600160a01b039092166001600160a01b0319909216919091179055516002909101555060405161139390816101368239f35b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162fdd58e14610f715750806301ffc9a714610f045780630e89341c14610e705780632d4e1d5214610e285780632eb2c2d614610bd25780634e1273f414610a76578063a22cb465146109ed578063a75fcb1e14610994578063b061db941461046a578063b8489fb51461037c578063bd85b03914610355578063cf35bdd0146102d5578063e985e9c514610288578063eafe7a74146102655763f242432a146100c757600080fd5b346102615760a0366003190112610261576100e0610fae565b836100e9610fc9565b608435926064359060443567ffffffffffffffff861161025d576101317fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629636908901611081565b95909461013d846112a8565b6001600160a01b0381811694610154861515611253565b169081835284828c60209b8c9160018352808820898952835280882061017b8c825461128e565b905584885260018352808820898952835280882061019a8c825461129b565b90558a8151938a85528401523392a43b6101b2575080f35b6101f188968b519889978896879563f23a6e6160e01b9e8f8852339088015260248701526044860152606485015260a0608485015260a48401916111f1565b03925af19182156102535761021a94508592610226575b50506001600160e01b03191614611212565b38808080808080808880f35b6102459250803d1061024c575b61023d8183611100565b8101906111d1565b3880610208565b503d610233565b84513d87823e3d90fd5b8480fd5b8280fd5b5050346102845781600319360112610284576020906005549051908152f35b5080fd5b50503461028457806003193601126102845760ff816020936102a8610fae565b6102b0610fc9565b6001600160a01b03918216835282875283832091168252855220549151911615158152f35b50919034610284576020366003190112610284578235600554811015610261576102fe906110af565b5080549160ff83169260018060a01b0390600282600186015416940154948351966005821015610342575060809750865260081c1660208501528301526060820152f35b634e487b7160e01b815260218952602490fd5b50346102615760203660031901126102615760209282913581526002845220549051908152f35b503461026157606036600319011261026157610396610fae565b916024359160443580151591828203610466576005548510156104235750906104137f6aceb1b079beeabdd8c2f30cd221ca27ec52e9d0aef6bb229cc175cf15dd778b939233885260036020528388209660018060a01b0316968789526020528388208689526020528388209060ff801983541691151516179055565b815193845260208401523392a380f35b606490602085519162461bcd60e51b8352820152601d60248201527f41737365744d616e616765723a206173736574206e6f742076616c69640000006044820152fd5b8680fd5b509190346102845761047b36610fdf565b9190949260059586821015948561034257600183149788159889610986575b878115610963575b5015610920576104b184611021565b9960018060a01b03978887169687855260209c8d52898b86209616958686528d528a85208986528d528a8520549b8c156104ef575b8d8d8d51908152f35b909192939495969798809a9c501590838215610912575b5050156108cf578161071e57861591828015610774575b156107315761071e5781610715575b811561070a575b50156106cf578154988851926080840184811067ffffffffffffffff8211176106bc57908b9392918b528785528c85018981528b8601938885526801000000000000000060608801968d885210156106a9576105948e6001810185556110af565b9790976106975751928310156106845750855490516001600160a81b031990911660ff9092169190911760089190911b610100600160a81b031617845590516001840180546001600160a01b03191691909216179055516002909101557f30605d4cd099421ed12ca1ba642a1ea2659f679b5cdd0ccd032586640eeaff4391869188907f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b90849061064488611021565b8982528d528181208582528d528181208a82528d5283828220558151908d82528d820152a281519081528789820152a438808080808080808080806104e6565b634e487b7160e01b885260219052602487fd5b634e487b7160e01b8952888252602489fd5b634e487b7160e01b885260419052602487fd5b634e487b7160e01b865260418452602486fd5b875162461bcd60e51b81529081018a905260156024820152742cb4b2b6322137bc1d102737ba1030903a37b5b2b760591b6044820152606490fd5b90503b151538610533565b8715915061052c565b634e487b7160e01b855260218352602485fd5b8a5162461bcd60e51b81528085018e9052601b60248201527f5969656c64426f783a205374726174656779206d69736d6174636800000000006044820152606490fd5b50508951630c3e9ce360e21b81528c8185818a5afa9081156108c557869161088c575b5084811015610879578590881480610811575b801561051d57508a516305f5c3df60e21b81528d8186818b5afa9081156108075787916107da575b508a1461051d565b90508d81813d8311610800575b6107f18183611100565b810103126104665751386107d2565b503d6107e7565b8c513d89823e3d90fd5b508a51633dad37ed60e21b81528d8186818b5afa90811561080757908d91889161083f575b501689146107aa565b8f8193508092503d8311610872575b6108588183611100565b8101031261046657518c81168103610466578c9038610836565b503d61084e565b634e487b7160e01b865260218452602486fd5b90508c81813d83116108be575b6108a38183611100565b810103126108ba5751848110156108ba5738610797565b8580fd5b503d610899565b8b513d88823e3d90fd5b895162461bcd60e51b81528084018d9052601e60248201527f5969656c64426f783a204e6f20746f6b656e496420666f7220455243323000006044820152606490fd5b909150610879573883610506565b875162461bcd60e51b81526020818c0152601f60248201527f41737365744d616e616765723a2063616e6e6f7420616464204e6174697665006044820152606490fd5b90506109735760038414876104a2565b634e487b7160e01b825260218a52602482fd5b50955080956002841461049a565b5050346102845760603660031901126102845760ff816020936109b5610fae565b6109bd610fc9565b6001600160a01b039182168352600387528383209116825285528181206044358252855220549151911615158152f35b505034610284578060031936011261028457610a07610fae565b90602435908115159182810361025d57610a4990338652856020528286209460018060a01b0316948587526020528286209060ff801983541691151516179055565b519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b5082903461028457826003193601126102845767ffffffffffffffff91813583811161028457610aa99036908401611050565b91909360249081359081116102615791848692610aca899536908401611050565b949092610ad8868914611138565b610ae188611184565b93610aee88519586611100565b888552610afa89611184565b602099868b019891601f1901368a37875b818110610b54575050505050505083519485948186019282875251809352850193925b828110610b3d57505050500390f35b835185528695509381019392810192600101610b2e565b610b658183889e9b9a9c9d9e6111c1565b356001600160a01b03811690819003610bce578852600189528b8820610b8c8285876111c1565b35895289528b8820548a51821015610bbc5790610bb1918a8260051b8d01015261119c565b9a999896979a610b0b565b634e487b7160e01b8952603286528789fd5b8880fd5b50346102615760031960a036820112610e2457610bed610fae565b610bf5610fc9565b9067ffffffffffffffff90604435828111610e2057610c179036908701611050565b929094606435828111610e1c57610c319036908901611050565b92608435908111610e185790610c4d8897949236908b01611081565b929094610c5b828914611138565b610c64876112a8565b6001600160a01b03818116998a918f918f91610c81851515611253565b839b169a8b935b8d808310610daa57610cc792507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb939150845194808652850191611339565b91808303602082015280610cdd3394898b611339565b0390a43b610ce9578b80f35b8a51988997889763bc197c8160e01b9c8d8a5233908a015260248901526044880160a0905260a4880190610d1c92611339565b9084878303016064880152610d3092611339565b91848303016084850152610d43926111f1565b0381875a94602095f1908115610d9d57610d7093508491610d7f575b506001600160e01b03191614611212565b38808080808080808080808b80f35b610d97915060203d811161024c5761023d8183611100565b38610d5f565b50505051903d90823e3d90fd5b95610dc083610e0c98610e0596989795986111c1565b3590610dcd878b8d6111c1565b3595835260016020918183528585208486528352858520610def89825461128e565b905584528152838320918352522091825461129b565b905561119c565b878d8f8c938e91610c88565b8a80fd5b8980fd5b8780fd5b8380fd5b5050346102845780602092610e47610e3f36610fdf565b939092611021565b6001600160a01b0391821685528752848420911683528552828220908252845220549051908152f35b50346102615760209283600319360112610f01578251918483019083821067ffffffffffffffff831117610eee575083949291945283815282519382859384528251928382860152825b848110610ed857505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610eba565b634e487b7160e01b835260419052602482fd5b80fd5b503461026157602036600319011261026157359063ffffffff60e01b821680920361026157602092506301ffc9a760e01b8214918215610f60575b8215610f4f575b50519015158152f35b6303a24d0760e21b14915038610f46565b636cdb3d1360e11b81149250610f3f565b849084346102615780600319360112610261576020926001600160a01b03610f97610fae565b168152600184528181206024358252845220548152f35b600435906001600160a01b0382168203610fc457565b600080fd5b602435906001600160a01b0382168203610fc457565b6080906003190112610fc4576004356005811015610fc457906001600160a01b03906024358281168103610fc457916044359081168103610fc4579060643590565b600581101561103a576000526004602052604060002090565b634e487b7160e01b600052602160045260246000fd5b9181601f84011215610fc45782359167ffffffffffffffff8311610fc4576020808501948460051b010111610fc457565b9181601f84011215610fc45782359167ffffffffffffffff8311610fc45760208381860195010111610fc457565b6005548110156110ea576003906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761112257604052565b634e487b7160e01b600052604160045260246000fd5b1561113f57565b60405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152606490fd5b67ffffffffffffffff81116111225760051b60200190565b60001981146111ab5760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156110ea5760051b0190565b90816020910312610fc457516001600160e01b031981168103610fc45790565b908060209392818452848401376000828201840152601f01601f1916010190565b1561121957565b60405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606490fd5b1561125a57565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606490fd5b919082039182116111ab57565b919082018092116111ab57565b60018060a01b0316338114908115611330575b8115611306575b50156112ca57565b60405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606490fd5b90506000526000602052604060002033600052602052600160ff60406000205416151514386112c2565b600091506112bb565b81835290916001600160fb1b038311610fc45760209260051b80928483013701019056fea2646970667358221220a45eae3df9c81b919bf817ff1659b2dcc58297cb011f78ee727b18642a6b449764736f6c63430008120033";

type AssetRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetRegister__factory extends ContractFactory {
  constructor(...args: AssetRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetRegister> {
    return super.deploy(overrides || {}) as Promise<AssetRegister>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetRegister {
    return super.attach(address) as AssetRegister;
  }
  override connect(signer: Signer): AssetRegister__factory {
    return super.connect(signer) as AssetRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetRegisterInterface {
    return new utils.Interface(_abi) as AssetRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetRegister {
    return new Contract(address, _abi, signerOrProvider) as AssetRegister;
  }
}
