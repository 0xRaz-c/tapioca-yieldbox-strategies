/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../YieldBox/contracts/ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f37806100206000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80634e1273f4116100665780634e1273f41461013b578063a22cb4651461015b578063bd85b0391461016e578063e985e9c51461018e578063f242432a146101b957600080fd5b8062fdd58e1461009757806301ffc9a7146100d55780630e89341c146100f85780632eb2c2d614610126575b600080fd5b6100c26100a536600461094f565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100e86100e336600461098f565b6101cc565b60405190151581526020016100cc565b6101196101063660046109b3565b5060408051602081019091526000815290565b6040516100cc91906109cc565b610139610134366004610aaf565b61021e565b005b61014e610149366004610b6a565b610378565b6040516100cc9190610bd6565b610139610169366004610c1a565b6104c3565b6100c261017c3660046109b3565b60026020526000908152604090205481565b6100e861019c366004610c56565b600060208181529281526040808220909352908152205460ff1681565b6101396101c7366004610c89565b61052d565b60006001600160e01b031982166301ffc9a760e01b14806101fd5750636cdb3d1360e11b6001600160e01b03198316145b8061021857506303a24d0760e21b6001600160e01b03198316145b92915050565b84831461026d5760405162461bcd60e51b815260206004820152601860248201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b60448201526064015b60405180910390fd5b61027688610630565b6102848888888888886106b3565b6001600160a01b0387163b1561036e5760405163bc197c8160e01b808252906001600160a01b0389169063bc197c81906102d09033908d908c908c908c908c908c908c90600401610d60565b602060405180830381600087803b1580156102ea57600080fd5b505af11580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190610dc4565b6001600160e01b0319161461036e5760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606401610264565b5050505050505050565b6060838281146103c55760405162461bcd60e51b815260206004820152601860248201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b6044820152606401610264565b8067ffffffffffffffff8111156103de576103de610de1565b604051908082528060200260200182016040528015610407578160200160208202803683370190505b50915060005b818110156104b9576001600088888481811061042b5761042b610df7565b90506020020160208101906104409190610e0d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868481811061047457610474610df7565b9050602002013581526020019081526020016000205483828151811061049c5761049c610df7565b6020908102919091010152806104b181610e3e565b91505061040d565b5050949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61053686610630565b6105428686868661082d565b6001600160a01b0385163b156106285760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e619061058a9033908b908a908a908a908a90600401610e59565b602060405180830381600087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610dc4565b6001600160e01b031916146106285760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606401610264565b505050505050565b6001600160a01b03811633148061066d57506001600160a01b03811660009081526020818152604080832033845290915290205460ff1615156001145b6106b05760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606401610264565b50565b6001600160a01b0385166106f85760405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606401610264565b8260005b818110156107c857600086868381811061071857610718610df7565b905060200201359050600085858481811061073557610735610df7565b6001600160a01b038d16600090815260016020908152604080832088845282528220805493909102949094013594508493925090610774908490610ea0565b90915550506001600160a01b0389166000908152600160209081526040808320858452909152812080548392906107ac908490610eb7565b92505081905550505080806107c090610e3e565b9150506106fc565b50856001600160a01b0316876001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888888860405161081c9493929190610ecf565b60405180910390a450505050505050565b6001600160a01b0383166108725760405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606401610264565b6001600160a01b0384166000908152600160209081526040808320858452909152812080548392906108a5908490610ea0565b90915550506001600160a01b0383166000908152600160209081526040808320858452909152812080548392906108dd908490610eb7565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b80356001600160a01b038116811461094a57600080fd5b919050565b6000806040838503121561096257600080fd5b61096b83610933565b946020939093013593505050565b6001600160e01b0319811681146106b057600080fd5b6000602082840312156109a157600080fd5b81356109ac81610979565b9392505050565b6000602082840312156109c557600080fd5b5035919050565b600060208083528351808285015260005b818110156109f9578581018301518582016040015282016109dd565b81811115610a0b576000604083870101525b50601f01601f1916929092016040019392505050565b60008083601f840112610a3357600080fd5b50813567ffffffffffffffff811115610a4b57600080fd5b6020830191508360208260051b8501011115610a6657600080fd5b9250929050565b60008083601f840112610a7f57600080fd5b50813567ffffffffffffffff811115610a9757600080fd5b602083019150836020828501011115610a6657600080fd5b60008060008060008060008060a0898b031215610acb57600080fd5b610ad489610933565b9750610ae260208a01610933565b9650604089013567ffffffffffffffff80821115610aff57600080fd5b610b0b8c838d01610a21565b909850965060608b0135915080821115610b2457600080fd5b610b308c838d01610a21565b909650945060808b0135915080821115610b4957600080fd5b50610b568b828c01610a6d565b999c989b5096995094979396929594505050565b60008060008060408587031215610b8057600080fd5b843567ffffffffffffffff80821115610b9857600080fd5b610ba488838901610a21565b90965094506020870135915080821115610bbd57600080fd5b50610bca87828801610a21565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015610c0e57835183529284019291840191600101610bf2565b50909695505050505050565b60008060408385031215610c2d57600080fd5b610c3683610933565b915060208301358015158114610c4b57600080fd5b809150509250929050565b60008060408385031215610c6957600080fd5b610c7283610933565b9150610c8060208401610933565b90509250929050565b60008060008060008060a08789031215610ca257600080fd5b610cab87610933565b9550610cb960208801610933565b94506040870135935060608701359250608087013567ffffffffffffffff811115610ce357600080fd5b610cef89828a01610a6d565b979a9699509497509295939492505050565b81835260006001600160fb1b03831115610d1a57600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090610d8d908301888a610d01565b8281036060840152610da0818789610d01565b90508281036080840152610db5818587610d37565b9b9a5050505050505050505050565b600060208284031215610dd657600080fd5b81516109ac81610979565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610e1f57600080fd5b6109ac82610933565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610e5257610e52610e28565b5060010190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a060808201819052600090610e949083018486610d37565b98975050505050505050565b600082821015610eb257610eb2610e28565b500390565b60008219821115610eca57610eca610e28565b500190565b604081526000610ee3604083018688610d01565b8281036020840152610ef6818587610d01565b97965050505050505056fea264697066735822122009c69717de7d601eb9aece3a59bf198fbebfeb65a62fe323dfd7f22f77add3a864736f6c63430008090033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
