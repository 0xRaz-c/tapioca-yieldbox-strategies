/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ConvexTricryptoStrategy,
  ConvexTricryptoStrategyInterface,
} from "../../../contracts/convex/ConvexTricryptoStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewadPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_booster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpGetter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_multiSwapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "LPGetterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "MultiSwapper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "booster",
    outputs: [
      {
        internalType: "contract IConvexBooster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpGetter",
    outputs: [
      {
        internalType: "contract ITricryptoLPGetter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IConvexRewardPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setMultiSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpGetter",
        type: "address",
      },
    ],
    name: "setTricryptoLPGetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zap",
    outputs: [
      {
        internalType: "contract IConvexZap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b50604051620037dd380380620037dd8339810160408190526200003591620004d0565b6001600160a01b03808816608052861660a052600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360016002556001600160a01b0386811660c052600380546001600160a01b0319908116848416179091558482166101205285821660e0526004805490911684831617815590861661010081905260408051633c41a11560e21b81529051919263f1068454928282019260209290829003018186803b1580156200010957600080fd5b505afa1580156200011e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014491906200057b565b61014081905260e051604051631526fe2760e01b815260048101929092526001600160a01b031690631526fe279060240160c06040518083038186803b1580156200018e57600080fd5b505afa158015620001a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c99190620005a6565b600001516001600160a01b0316610160816001600160a01b031681525050610100516001600160a01b031663f7c618c16040518163ffffffff1660e01b815260040160206040518083038186803b1580156200022457600080fd5b505afa15801562000239573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025f919062000660565b6001600160a01b039081166101805260c05160405163095ea7b360e01b81528483166004820152600019602482015291169063095ea7b390604401602060405180830381600087803b158015620002b557600080fd5b505af1158015620002ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f0919062000687565b506101605160405163095ea7b360e01b81526001600160a01b03848116600483015260001960248301529091169063095ea7b390604401602060405180830381600087803b1580156200034257600080fd5b505af115801562000357573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037d919062000687565b506101605160405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b390604401602060405180830381600087803b158015620003cf57600080fd5b505af1158015620003e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040a919062000687565b506101805160405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b390604401602060405180830381600087803b1580156200045c57600080fd5b505af115801562000471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000497919062000687565b5050505050505050620006a5565b6001600160a01b0381168114620004bb57600080fd5b50565b8051620004cb81620004a5565b919050565b600080600080600080600060e0888a031215620004ec57600080fd5b8751620004f981620004a5565b60208901519097506200050c81620004a5565b60408901519096506200051f81620004a5565b60608901519095506200053281620004a5565b60808901519094506200054581620004a5565b60a08901519093506200055881620004a5565b60c08901519092506200056b81620004a5565b8091505092959891949750929550565b6000602082840312156200058e57600080fd5b5051919050565b80518015158114620004cb57600080fd5b600060c08284031215620005b957600080fd5b60405160c081016001600160401b0381118282101715620005ea57634e487b7160e01b600052604160045260246000fd5b604052620005f883620004be565b81526200060860208401620004be565b60208201526200061b60408401620004be565b60408201526200062e60608401620004be565b60608201526200064160808401620004be565b60808201526200065460a0840162000595565b60a08201529392505050565b6000602082840312156200067357600080fd5b81516200068081620004a5565b9392505050565b6000602082840312156200069a57600080fd5b620006808262000595565b60805160a05160c05160e0516101005161012051610140516101605161018051613018620007c5600039600081816104ac01528181610a8e015281816110f801526111b5015260006102fd0152600081816104380152611d2301526000818161026b01526116f0015260008181610324015281816109e501528181610e1401528181610eb601528181611e070152818161224301526122e50152600081816103950152611d5a0152600081816103fe015281816106ef015281816108fd01528181610ae201528181611339015281816113f201528181611f2401528181611fea01528181612187015281816124b8015281816125a101526125dd015260006104850152600081816103c401528181610d51015261124301526130186000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063734daaa11161010f578063e3575f05116100a2578063f3fef3a311610071578063f3fef3a31461045a578063f64920b81461046d578063f6b4dfb414610480578063f7c618c1146104a757600080fd5b8063e3575f05146102f0578063eb6d3a11146103f9578063ec32e1b914610420578063f10684541461043357600080fd5b8063ce845d1d116100de578063ce845d1d146102f0578063db2e21bc146103b7578063de406577146103bf578063e30c3978146103e657600080fd5b8063734daaa1146103615780638da5cb5b1461036a578063afa91cc61461037d578063c6def0761461039057600080fd5b806348dcb051116101875780635fcbd285116101565780635fcbd285146102f857806366666aa91461031f578063726c64f2146103465780637284e4161461035957600080fd5b806348dcb051146102cd5780634cce992d146102d55780634e71e0c8146102e857806350188301146102f057600080fd5b806322a58c5d116101c357806322a58c5d14610253578063262d6152146102665780632b3297f9146102a557806330fa738c146102b857600080fd5b806306fdde03146101ea578063078dfbe71461022857806317d70f7c1461023d575b600080fd5b60408051808201909152601081526f436f6e7665782d54726963727970746f60801b60208201525b60405161021f9190612893565b60405180910390f35b61023b6102363660046128e9565b6104ce565b005b610245600081565b60405190815260200161021f565b61023b6102613660046129a3565b6105e6565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161021f565b60035461028d906001600160a01b031681565b6102c0600181565b60405161021f9190612a23565b6102456109c3565b61023b6102e3366004612a4b565b610bef565b61023b610c5a565b610245610d17565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b60045461028d906001600160a01b031681565b610212610d26565b61024560055481565b60005461028d906001600160a01b031681565b61023b61038b366004612a4b565b610d46565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b610245610db9565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b60015461028d906001600160a01b031681565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b61023b61042e366004612a64565b61106b565b6102457f000000000000000000000000000000000000000000000000000000000000000081565b61023b610468366004612a88565b611238565b61023b61047b366004612a64565b6112a9565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b61028d7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146105015760405162461bcd60e51b81526004016104f890612ab4565b60405180910390fd5b81156105c4576001600160a01b03831615158061051b5750805b61055f5760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b60448201526064016104f8565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b80516105ef5750565b6000806105fb83611421565b9150915060005b81518110156108e457600083828151811061061f5761061f612ae9565b602002602001015111156108d25761067f82828151811061064257610642612ae9565b6020026020010151600360009054906101000a90046001600160a01b031685848151811061067257610672612ae9565b60200260200101516119a3565b6040805160028082526060820183526000926020830190803683370190505090508282815181106106b2576106b2612ae9565b6020026020010151816000815181106106cd576106cd612ae9565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061072157610721612ae9565b6001600160a01b0392831660209182029290920101526003548551600092919091169063d06ca61f9087908690811061075c5761075c612ae9565b6020026020010151846040518363ffffffff1660e01b8152600401610782929190612b43565b60006040518083038186803b15801561079a57600080fd5b505afa1580156107ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d69190810190612b88565b6001815181106107e8576107e8612ae9565b6020026020010151905060006127108260326108049190612c2f565b61080e9190612c4e565b6108189083612c70565b60035487519192506001600160a01b0316906338ed17399088908790811061084257610842612ae9565b602002602001015183863068056bc75e2d631000006040518663ffffffff1660e01b8152600401610877959493929190612c87565b600060405180830381600087803b15801561089157600080fd5b505af11580156108a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108cd9190810190612b88565b505050505b806108dc81612cc3565b915050610602565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561094757600080fd5b505afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190612cde565b905061098a81611bd7565b6040518181527fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d39060200160405180910390a150505050565b604051630700037d60e01b815230600482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630700037d9060240160206040518083038186803b158015610a2757600080fd5b505afa158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190612cde565b6000925090508015610beb576040805160028082526060820183526000926020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610ac057610ac0612ae9565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610b1457610b14612ae9565b6001600160a01b03928316602091820292909201015260035460405163d06ca61f60e01b815291169063d06ca61f90610b539085908590600401612b43565b60006040518083038186803b158015610b6b57600080fd5b505afa158015610b7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ba79190810190612b88565b600181518110610bb957610bb9612ae9565b60200260200101519250612710836032610bd39190612c2f565b610bdd9190612c4e565b610be79084612c70565b9250505b5090565b6000546001600160a01b03163314610c195760405162461bcd60e51b81526004016104f890612ab4565b60055460408051918252602082018390527f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc910160405180910390a1600555565b6001546001600160a01b0316338114610cb55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e657260448201526064016104f8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000610d21611de5565b905090565b6060604051806060016040528060338152602001612fb060339139905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dad5760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b60448201526064016104f8565b610db681611fca565b50565b600080546001600160a01b03163314610de45760405162461bcd60e51b81526004016104f890612ab4565b610dfc604051806020016040528060008152506105e6565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610e5e57600080fd5b505afa158015610e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e969190612cde565b604051636197390160e11b815260048101829052600060248201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c32e720290604401602060405180830381600087803b158015610f0257600080fd5b505af1158015610f16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3a9190612cf7565b506004805460405163af30c87360e01b81529182018390526000916001600160a01b039091169063af30c8739060240160206040518083038186803b158015610f8257600080fd5b505afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba9190612cde565b90506000612710610fcc836032612c2f565b610fd69190612c4e565b6004805460405163ca26855760e01b81529293506001600160a01b03169163ca26855791611011918791869101918252602082015260400190565b602060405180830381600087803b15801561102b57600080fd5b505af115801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190612cde565b935050505090565b6000546001600160a01b031633146110955760405162461bcd60e51b81526004016104f890612ab4565b6003546040516001600160a01b038084169216907fe36d79dcda63d47bee388b7dde8bba0b326a1b459889de48dc94dcf3504eda4b90600090a360035460405163095ea7b360e01b81526001600160a01b039182166004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b390604401602060405180830381600087803b15801561113e57600080fd5b505af1158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190612cf7565b50600380546001600160a01b0319166001600160a01b0383811691821790925560405163095ea7b360e01b8152600481019190915260001960248201527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044015b602060405180830381600087803b1580156111fc57600080fd5b505af1158015611210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112349190612cf7565b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461129f5760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b60448201526064016104f8565b61123482826120f9565b6000546001600160a01b031633146112d35760405162461bcd60e51b81526004016104f890612ab4565b6004546040516001600160a01b038084169216907fec75cca752304221051372b35f3488d6d59ae4be7bbbb04869f1e887318e129990600090a36004805460405163095ea7b360e01b81526001600160a01b0391821692810192909252600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561137d57600080fd5b505af1158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b59190612cf7565b50600480546001600160a01b0319166001600160a01b03838116918217835560405163095ea7b360e01b81529283019190915260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016111e2565b60608061145d6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b838060200190518101906114719190612dc8565b60a08088019190915260808088019290925260608088019390935260408088019490945260208088019590955294865282519485018352600080865293850184905291840183905283018290528201528160a001518060200190518101906114d99190612ebd565b60808601526060808601919091526040850191909152602084019190915290825282015151825151146115645760405162461bcd60e51b815260206004820152602d60248201527f436f6e76657854726963727970746f53747261746567793a20636c61696d206460448201526c185d18481b9bdd081d985b1a59609a1b60648201526084016104f8565b8151516115c95760405162461bcd60e51b815260206004820152602d60248201527f436f6e76657854726963727970746f53747261746567793a206e6f7468696e6760448201526c103a379031b630b4b6903337b960991b60648201526084016104f8565b600082606001515167ffffffffffffffff8111156115e9576115e9612934565b604051908082528060200260200182016040528015611612578160200160208202803683370190505b50905060005b8360600151518110156116ed578360600151818151811061163b5761163b612ae9565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561168657600080fd5b505afa15801561169a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116be9190612cde565b8282815181106116d0576116d0612ae9565b6020908102919091010152806116e581612cc3565b915050611618565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a7b87f284600001518560200151866040015187608001518760000151886020015189604001518a606001518b608001516040518a63ffffffff1660e01b815260040161176e99989796959493929190612efd565b600060405180830381600087803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b50505050600083606001515167ffffffffffffffff8111156117c0576117c0612934565b6040519080825280602002602001820160405280156117e9578160200160208202803683370190505b50905060005b8460600151518110156118c4578460600151818151811061181257611812612ae9565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561185d57600080fd5b505afa158015611871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118959190612cde565b8282815181106118a7576118a7612ae9565b6020908102919091010152806118bc81612cc3565b9150506117ef565b50600084606001515167ffffffffffffffff8111156118e5576118e5612934565b60405190808252806020026020018201604052801561190e578160200160208202803683370190505b50905060005b85606001515181101561198e5783818151811061193357611933612ae9565b602002602001015183828151811061194d5761194d612ae9565b602002602001015161195f9190612c70565b82828151811061197157611971612ae9565b60209081029190910101528061198681612cc3565b915050611914565b50808560600151965096505050505050915091565b604080516001600160a01b0384811660248301526000604480840182905284518085039091018152606490930184526020830180516001600160e01b031663095ea7b360e01b1790529251908616916119fb91612f7b565b6000604051808303816000865af19150503d8060008114611a38576040519150601f19603f3d011682016040523d82523d6000602084013e611a3d565b606091505b5050905080611aa85760405162461bcd60e51b815260206004820152603160248201527f4f7065726174696f6e734c69623a3a73616665417070726f76653a20617070726044820152701bdd985b081c995cd95d0819985a5b1959607a1b60648201526084016104f8565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290881691611b049190612f7b565b6000604051808303816000865af19150503d8060008114611b41576040519150601f19603f3d011682016040523d82523d6000602084013e611b46565b606091505b5091509150818015611b70575080511580611b70575080806020019051810190611b709190612cf7565b611bcf5760405162461bcd60e51b815260206004820152602a60248201527f4f7065726174696f6e734c69623a3a73616665417070726f76653a20617070726044820152691bdd994819985a5b195960b21b60648201526084016104f8565b505050505050565b600480546040516305c43acd60e01b81529182018390526000916001600160a01b03909116906305c43acd9060240160206040518083038186803b158015611c1e57600080fd5b505afa158015611c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c569190612cde565b9050670de0b6b3a76400008110611234576000612710611c77836032612c2f565b611c819190612c4e565b611c8b9083612c70565b6004805460405163b529fe1d60e01b8152918201869052602482018390529192506000916001600160a01b03169063b529fe1d90604401602060405180830381600087803b158015611cdc57600080fd5b505af1158015611cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d149190612cde565b6040516321d0683360e11b81527f0000000000000000000000000000000000000000000000000000000000000000600482015260248101829052600160448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906343a0d06690606401602060405180830381600087803b158015611da657600080fd5b505af1158015611dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dde9190612cf7565b5050505050565b6040516370a0823160e01b815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015611e4957600080fd5b505afa158015611e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e819190612cde565b6004805460405163af30c87360e01b81529182018390529192506000916001600160a01b03169063af30c8739060240160206040518083038186803b158015611ec957600080fd5b505afa158015611edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f019190612cde565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015611f6657600080fd5b505afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e9190612cde565b90506000611faa6109c3565b905080611fb78385612f97565b611fc19190612f97565b94505050505090565b611fd26126f7565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561203457600080fd5b505afa158015612048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206c9190612cde565b90506005548111156120ba5761208181611bd7565b6040518181527fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d39060200160405180910390a1506120ef565b6040518281527f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca9060200160405180910390a1505b610db66001600255565b6121016126f7565b600061210b611de5565b90508181101561216f5760405162461bcd60e51b815260206004820152602960248201527f436f6e76657854726963727970746f53747261746567793a20616d6f756e74206044820152681b9bdd081d985b1a5960ba1b60648201526084016104f8565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156121d157600080fd5b505afa1580156121e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122099190612cde565b9050808311156124a15761222b604051806020016040528060008152506105e6565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561228d57600080fd5b505afa1580156122a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c59190612cde565b604051636197390160e11b815260048101829052600060248201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c32e720290604401602060405180830381600087803b15801561233157600080fd5b505af1158015612345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123699190612cf7565b506004805460405163af30c87360e01b81529182018390526000916001600160a01b039091169063af30c8739060240160206040518083038186803b1580156123b157600080fd5b505afa1580156123c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e99190612cde565b905060006127106123fb836032612c2f565b6124059190612c4e565b61240f9083612c70565b6004805460405163ca26855760e01b81529293506001600160a01b03169163ca2685579161244a918791869101918252602082015260400190565b602060405180830381600087803b15801561246457600080fd5b505af1158015612478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061249c9190612cde565b505050505b6040516370a0823160e01b815230600482015283907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561250257600080fd5b505afa158015612516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253a9190612cde565b10156125945760405162461bcd60e51b815260206004820152602360248201527f436f6e76657854726963727970746f53747261746567793a206e6f7420656e6f6044820152620eaced60eb1b60648201526084016104f8565b6125c86001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016858561274f565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561262757600080fd5b505afa15801561263b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061265f9190612cde565b90506005548111156126a85761267481611bd7565b6040518181527fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d39060200160405180910390a15b836001600160a01b03167f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d8846040516126e391815260200190565b60405180910390a250506112346001600255565b6002805414156127495760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f8565b60028055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916127ab9190612f7b565b6000604051808303816000865af19150503d80600081146127e8576040519150601f19603f3d011682016040523d82523d6000602084013e6127ed565b606091505b50915091508180156128175750805115806128175750808060200190518101906128179190612cf7565b611dde5760405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c65640000000060448201526064016104f8565b60005b8381101561287e578181015183820152602001612866565b8381111561288d576000848401525b50505050565b60208152600082518060208401526128b2816040850160208701612863565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610db657600080fd5b8015158114610db657600080fd5b6000806000606084860312156128fe57600080fd5b8335612909816128c6565b92506020840135612919816128db565b91506040840135612929816128db565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561297357612973612934565b604052919050565b600067ffffffffffffffff82111561299557612995612934565b50601f01601f191660200190565b6000602082840312156129b557600080fd5b813567ffffffffffffffff8111156129cc57600080fd5b8201601f810184136129dd57600080fd5b80356129f06129eb8261297b565b61294a565b818152856020838501011115612a0557600080fd5b81602084016020830137600091810160200191909152949350505050565b6020810160058310612a4557634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215612a5d57600080fd5b5035919050565b600060208284031215612a7657600080fd5b8135612a81816128c6565b9392505050565b60008060408385031215612a9b57600080fd5b8235612aa6816128c6565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015612b385781516001600160a01b031687529582019590820190600101612b13565b509495945050505050565b828152604060208201526000612b5c6040830184612aff565b949350505050565b600067ffffffffffffffff821115612b7e57612b7e612934565b5060051b60200190565b60006020808385031215612b9b57600080fd5b825167ffffffffffffffff811115612bb257600080fd5b8301601f81018513612bc357600080fd5b8051612bd16129eb82612b64565b81815260059190911b82018301908381019087831115612bf057600080fd5b928401925b82841015612c0e57835182529284019290840190612bf5565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612c4957612c49612c19565b500290565b600082612c6b57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612c8257612c82612c19565b500390565b85815284602082015260a060408201526000612ca660a0830186612aff565b6001600160a01b0394909416606083015250608001529392505050565b6000600019821415612cd757612cd7612c19565b5060010190565b600060208284031215612cf057600080fd5b5051919050565b600060208284031215612d0957600080fd5b8151612a81816128db565b600082601f830112612d2557600080fd5b81516020612d356129eb83612b64565b82815260059290921b84018101918181019086841115612d5457600080fd5b8286015b84811015612d78578051612d6b816128c6565b8352918301918301612d58565b509695505050505050565b600082601f830112612d9457600080fd5b8151612da26129eb8261297b565b818152846020838601011115612db757600080fd5b612b5c826020830160208701612863565b60008060008060008060c08789031215612de157600080fd5b865167ffffffffffffffff80821115612df957600080fd5b612e058a838b01612d14565b97506020890151915080821115612e1b57600080fd5b612e278a838b01612d14565b96506040890151915080821115612e3d57600080fd5b612e498a838b01612d14565b95506060890151915080821115612e5f57600080fd5b612e6b8a838b01612d14565b94506080890151915080821115612e8157600080fd5b612e8d8a838b01612d14565b935060a0890151915080821115612ea357600080fd5b50612eb089828a01612d83565b9150509295509295509295565b600080600080600060a08688031215612ed557600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6000610120808352612f118184018d612aff565b90508281036020840152612f25818c612aff565b90508281036040840152612f39818b612aff565b90508281036060840152612f4d818a612aff565b6080840198909852505060a081019490945260c084019290925260e083015261010090910152949350505050565b60008251612f8d818460208701612863565b9190910192915050565b60008219821115612faa57612faa612c19565b50019056fe436f6e7665782d54726963727970746f20737472617465677920666f722077726170706564206e617469766520617373657473a2646970667358221220e6d3e4750408578cec86dd17568d1ff2ffcd58c61161283e9d4b4bf4b502b71164736f6c63430008090033";

type ConvexTricryptoStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConvexTricryptoStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConvexTricryptoStrategy__factory extends ContractFactory {
  constructor(...args: ConvexTricryptoStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _rewadPool: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _zap: PromiseOrValue<string>,
    _lpGetter: PromiseOrValue<string>,
    _multiSwapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConvexTricryptoStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _rewadPool,
      _booster,
      _zap,
      _lpGetter,
      _multiSwapper,
      overrides || {}
    ) as Promise<ConvexTricryptoStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _rewadPool: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _zap: PromiseOrValue<string>,
    _lpGetter: PromiseOrValue<string>,
    _multiSwapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _rewadPool,
      _booster,
      _zap,
      _lpGetter,
      _multiSwapper,
      overrides || {}
    );
  }
  override attach(address: string): ConvexTricryptoStrategy {
    return super.attach(address) as ConvexTricryptoStrategy;
  }
  override connect(signer: Signer): ConvexTricryptoStrategy__factory {
    return super.connect(signer) as ConvexTricryptoStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvexTricryptoStrategyInterface {
    return new utils.Interface(_abi) as ConvexTricryptoStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvexTricryptoStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConvexTricryptoStrategy;
  }
}
