/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlpStrategy,
  GlpStrategyInterface,
} from "../../../contracts/glp/GlpStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IGmxRewardRouterV2",
        name: "_gmxRewardRouter",
        type: "address",
      },
      {
        internalType: "contract IGmxRewardRouterV2",
        name: "_glpRewardRouter",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_sGlp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesPending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceDenom",
        type: "uint256",
      },
    ],
    name: "harvestGmx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610220604090808252346200067757608081620022e880380380916200002682856200067c565b833981010312620006775780516001600160a01b0390818116808203620006775760209362000057858201620006b6565b90606062000067888301620006b6565b9101518581168091036200067757869460805260a05260018060a01b031996600093338986541617855581519788809233887f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a363eb6d3a1160e01b825260049a8b915afa9081156200066d5790879186916200064b575b50166101008181528251633fc8cef360e01b81528589169a919891929088818c818f5afa908115620005ec57908391899162000629575b501603620005f65782516331e67c7160e01b8082529088818c818987165afa908115620005ec579083918991620005ca575b50166200058757610160948552835190815287818b818e5afa908115620004c857908291889162000565575b50168015620005225761018095865260c0528251630d43254f60e31b81529987908b908b9082905afa998a15620004f657899a8291889b9a9b9162000500575b501660e052868185511684519b8c809262af394d60e81b82525afa968715620004f65788999a8798620004d2575b50816101e098168852808287511685519a8b809263067200c560e11b82525afa988915620004c857908a969594939291889a620004a4575b50816102009a168a52808287511685519c8d8092631470f8ed60e21b82525afa9a8b156200049a57889b6200046e575b509086939291816101209c168c528082875116855196878092633e9b6c6f60e21b82525afa94851562000464579088918a9662000440575b508261014096168652808389511686519a8b8092633671df2560e01b82525afa98891562000436578a9962000412575b50826101a0991689528083895116865193848092631074c56d60e21b82525afa998a15620004075799620003d1575b50506101c097168752339060025416176002555197611bfb998a620006ed8b396080518a818161036f0152818161058301526105ca015260a0518a818161030d015281816104030152610b9a015260c0518a81816101c701526119a5015260e0518a81816110c20152818161168f01526117f70152518981816107b701528181610ea501526119e6015251886116d501525187610f3901525186610fba015251858181610da60152818161128201526118b00152518481816104460152611169015251838181611239015261170e0152518281816103bf015261119b01525181818161112c015261185b0152f35b620003f6929950803d10620003ff575b620003ed81836200067c565b810190620006cb565b963880620002e3565b503d620003e1565b8551903d90823e3d90fd5b816200042e929a503d8b11620003ff57620003ed81836200067c565b9738620002b4565b85513d8c823e3d90fd5b816200045c9297503d8811620003ff57620003ed81836200067c565b943862000284565b84513d8b823e3d90fd5b819b506200048f9088959493928d3d10620003ff57620003ed81836200067c565b9a909192936200024c565b84513d8a823e3d90fd5b81620004c0929b503d8c11620003ff57620003ed81836200067c565b98386200021c565b84513d89823e3d90fd5b81620004ee9299503d8a11620003ff57620003ed81836200067c565b9638620001e4565b83513d88823e3d90fd5b6200051b9150893d8b11620003ff57620003ed81836200067c565b38620001b6565b835162461bcd60e51b8152808b01899052601560248201527f42616420474d582072657761726420726f7574657200000000000000000000006044820152606490fd5b620005809150893d8b11620003ff57620003ed81836200067c565b3862000176565b835162461bcd60e51b8152808b01899052601560248201527f42616420474c502072657761726420726f7574657200000000000000000000006044820152606490fd5b620005e591508a3d8c11620003ff57620003ed81836200067c565b386200014a565b85513d8a823e3d90fd5b825162461bcd60e51b8152808a01889052600d60248201526c0ae8aa89040dad2e6dac2e8c6d609b1b6044820152606490fd5b6200064491508a3d8c11620003ff57620003ed81836200067c565b3862000118565b620006669150873d8911620003ff57620003ed81836200067c565b38620000e1565b82513d87823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620006a057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200067757565b908160209103126200067757516001600160a01b038116810362000677579056fe608060408181526004908136101561001657600080fd5b600092833560e01c90816306fdde0314610a4d57508063078dfbe71461094257806317d70f7c1461092757806330fa738c1461090b578063320113cd146108ec5780633c49e523146108b25780634641257d146108995780634690484014610870578063476343ee146107835780634e71e0c8146106d257806350188301146105405780637284e416146106305780638da5cb5b14610608578063afa91cc6146105b2578063ce845d1d14610540578063de4065771461056e578063e30c397814610545578063e3575f0514610540578063e74b981b146104f3578063f3fef3a314610340578063f6b4dfb4146102f85763fa461e331461011657600080fd5b346102f45760603660031901126102f45760443567ffffffffffffffff918282116102f057366023830112156102f057818401358381116102ec57820160249336858301116102e8577380a9ae39310abf666a87c743d6ebbd0e8c42158e918233036102b757908491602095869103126102b257858451928684019463a9059cbb60e01b865282850152013560448301526044825260808201908282109082111761029e57835251600091829190827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af13d15610297573d61020181610afb565b9061020e84519283610ad9565b81523d60008583013e5b81610267575b5015610228578480f35b5162461bcd60e51b815292830152601c908201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b8051801592508490831561027f575b5050503861021e565b61028f9350820181019101610c68565b388381610276565b6060610218565b85604188634e487b7160e01b600052526000fd5b600080fd5b835162461bcd60e51b8152602081890152600c818801526b139bdd081d1a19481c1bdbdb60a21b6044820152606490fd5b8680fd5b8580fd5b8480fd5b8280fd5b83823461033c578160031936011261033c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5082903461033c578060031936011261033c5761035b610b57565b6001600160a01b03936024359290610396337f0000000000000000000000000000000000000000000000000000000000000000881614611b8a565b61039e610da4565b6103a6610e83565b81516370a0823160e01b815230828201526020816024817f00000000000000000000000000000000000000000000000000000000000000008b165afa9081156104e95790859187916104b5575b5010610443575b505061042892937f000000000000000000000000000000000000000000000000000000000000000016610c80565b610430611095565b6104386117d6565b610440611665565b80f35b857f00000000000000000000000000000000000000000000000000000000000000001690813b156102ec578251633ccfd60b60e01b8152929186918491829084905af19081156104ac5750610499575b806103fa565b926104a661042894610a93565b92610493565b513d86823e3d90fd5b9150506020813d82116104e1575b816104d060209383610ad9565b810103126102ec57849051886103f3565b3d91506104c3565b83513d88823e3d90fd5b833461053d57602036600319011261053d5761050d610b57565b81546001600160a01b0391906105269083163314610c1d565b166001600160601b0360a01b600254161760025580f35b80fd5b610b6d565b83823461033c578160031936011261033c5760015490516001600160a01b039091168152602090f35b83823461033c578160031936011261033c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b833461053d57602036600319011261053d576105f8337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614611b8a565b610600610da4565b610428610e83565b83823461033c578160031936011261033c57905490516001600160a01b039091168152602090f35b5082903461033c578160031936011261033c57805191606083019083821067ffffffffffffffff8311176106bf57506106bb93508152603182527f486f6c6473207374616b656420474c5020746f6b656e7320616e6420636f6d706020830152706f756e647320746865207265776172647360781b8183015251918291602083526020830190610b17565b0390f35b634e487b7160e01b815260418552602490fd5b50346102f457826003193601126102f4576001546001600160a01b039290918383169190338390036107405750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b50346102f457826003193601126102f45760035490816107a1578380f35b80516370a0823160e01b815230938101939093527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03906020856024818587165afa90811561086757508590610834575b610820945083811061082a575b506108189183916002541690610c80565b600354610d81565b6003553880808380f35b9250610818610807565b506020843d821161085f575b8161084d60209383610ad9565b810103126102f05761082093516107fa565b3d9150610840565b513d87823e3d90fd5b83823461033c578160031936011261033c5760025490516001600160a01b039091168152602090f35b833461053d578060031936011261053d57610600610da4565b50346102f45736600319011261033c57610600906108da60018060a01b038454163314610c1d565b6108e2610da4565b602435903561197f565b83823461033c578160031936011261033c576020906003549051908152f35b83823461033c578160031936011261033c576020905160018152f35b83823461033c578160031936011261033c5751908152602090f35b50346102f45760603660031901126102f45761095c610b57565b916024359182151583036102f0576044359283151584036102ec5760018060a01b0394859161098f838954163314610c1d565b15610a31571692831590811591610a29575b50156109ee5750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160601b0360a01b8092161782556001541660015580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b9050386109a1565b9350505050166001600160601b0360a01b600154161760015580f35b92905034610a8f5783600319360112610a8f576106bb9350610a6e83610abd565b825263073474c560e41b602083015251918291602083526020830190610b17565b8380fd5b67ffffffffffffffff8111610aa757604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610aa757604052565b90601f8019910116810190811067ffffffffffffffff821117610aa757604052565b67ffffffffffffffff8111610aa757601f01601f191660200190565b919082519283825260005b848110610b43575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b22565b600435906001600160a01b03821682036102b257565b346102b25760008060031936011261053d576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610c12578291610bdd575b602082604051908152f35b90506020813d8211610c0a575b81610bf760209383610ad9565b8101031261033c57602091505138610bd2565b3d9150610bea565b6040513d84823e3d90fd5b15610c2457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b908160209103126102b2575180151581036102b25790565b60405163a9059cbb60e01b602082019081526001600160a01b039390931660248201526044808201949094529283526000928392908390610cc2606482610ad9565b51926001600160a01b03165af13d15610d7a573d610cdf81610afb565b90610ced6040519283610ad9565b81523d6000602083013e5b81610d4b575b5015610d0657565b60405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b8051801592508215610d60575b505038610cfe565b610d739250602080918301019101610c68565b3880610d58565b6060610cf8565b91908203918211610d8e57565b634e487b7160e01b600052601160045260246000fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156102b257604051809163185b800160e11b8252600160048301528160e46000938480948160248401526001604484015281606484015260016084840152600160a48401528160c48401525af1908115610e375750610e2c5750565b610e3590610a93565b565b604051903d90823e3d90fd5b81810292918115918404141715610d8e57565b8115610e60570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610d8e57565b604080516370a0823160e01b81523060048201526020916001600160a01b03917f00000000000000000000000000000000000000000000000000000000000000008316908481602481855afa90811561108a5760009161105d575b5060035490818111610ef3575b505050505050565b81610efd91610d81565b90606482029180830460641481151715610d8e57610f23612710610f2b94048093610e76565b600355610d81565b825163095ea7b360e01b81527f000000000000000000000000000000000000000000000000000000000000000085166001600160a01b031660048201526024810182905290919085816044816000865af180156110525791608491879493611025575b5060008551968794859363364e231160e01b8552600485015260248401528160448401528160648401527f0000000000000000000000000000000000000000000000000000000000000000165af190811561101b5750610ff2575b80808080610eeb565b813d8311611014575b6110058183610ad9565b810103126102b2573880610fe9565b503d610ffb565b513d6000823e3d90fd5b61104490853d871161104b575b61103c8183610ad9565b810190610c68565b5038610f8e565b503d611032565b84513d6000823e3d90fd5b908582813d8311611083575b6110738183610ad9565b8101031261053d57505138610ede565b503d611069565b83513d6000823e3d90fd5b604080516370a0823160e01b80825230600480840191909152600093909290916001600160a01b039060207f000000000000000000000000000000000000000000000000000000000000000083168185602481845afa948515611388578895611392575b508551637aeceb1f60e11b8152308882019081526001600160a01b039092166020830152908290829081906040010381877f0000000000000000000000000000000000000000000000000000000000000000165afa8015611388578890611359575b611166915085610e76565b907f000000000000000000000000000000000000000000000000000000000000000092865190815230888201528181602481887f0000000000000000000000000000000000000000000000000000000000000000165afa91821561134f57899261131f575b50506111d791836113c1565b92831561131657808411611236575b501692833b156102f0579060248592838551968794859363b6b55f2560e01b85528401525af190811561122d575061121c575050565b6112268291610a93565b61053d5750565b513d84823e3d90fd5b827f000000000000000000000000000000000000000000000000000000000000000016803b156112ff5787809188885180948193633ccfd60b60e01b83525af1611303575b506112a9837f0000000000000000000000000000000000000000000000000000000000000000169185610d81565b813b156112ff57879160248392885194859384926364f6446760e01b84528c8401525af180156112f5579087916112e1575b506111e6565b6112ea90610a93565b6102ec5785386112db565b85513d89823e3d90fd5b8780fd5b61130f90979197610a93565b953861127b565b50505050505050565b90809250813d8311611348575b6113368183610ad9565b810103126112ff57516111d7386111cb565b503d61132c565b87513d8b823e3d90fd5b508181813d8311611381575b61136f8183610ad9565b810103126112ff57611166905161115b565b503d611365565b86513d8a823e3d90fd5b9094508181813d83116113ba575b6113aa8183610ad9565b810103126112ff575193816110f9565b503d6113a0565b919091821561165d5760408051630479363b60e11b815230600482015290926020926001600160a01b031691908382602481865afa91821561165257600092611623575b5084516327e235e360e01b8152306004820152948486602481875afa958615611618576000966115e9575b50805163b5ff136d60e01b81523060048201528581602481885afa801561159a576000906115ba575b61146d91506114688886610d81565b610d81565b9687156115ad578781106115a5575b5080516322f80f7360e11b8152306004820152948086602481885afa95861561159a5787899160009861155b575b50916114cb866114c68a6114c18596602498610e76565b610e43565b610e56565b96845193848092635d50e72960e01b82523060048301525afa92831561101b575060009261152a575b50506114ff91610e76565b91821061150e575b5050505090565b611521945061146892916114c691610e43565b38808080611507565b81819392933d8311611554575b6115418183610ad9565b8101031261053d5750516114ff386114f4565b503d611537565b838095969798999350819492503d8311611593575b61157a8183610ad9565b8101031261053d575051949392919087876114cb6114aa565b503d611570565b82513d6000823e3d90fd5b96503861147c565b5050505050505050600090565b8682813d83116115e2575b6115cf8183610ad9565b8101031261053d575061146d9051611459565b503d6115c5565b90958582813d8311611611575b6116008183610ad9565b8101031261053d5750519438611430565b503d6115f6565b50513d6000823e3d90fd5b90918482813d831161164b575b61163a8183610ad9565b8101031261053d5750519038611405565b503d611630565b85513d6000823e3d90fd5b505050600090565b604080516370a0823160e01b8082523060048301529091906001600160a01b0390602080856024817f000000000000000000000000000000000000000000000000000000000000000087165afa948515611052576000956117a7575b5083519182523060048301528082602481867f0000000000000000000000000000000000000000000000000000000000000000165afa90811561105257600091611778575b5061173491507f000000000000000000000000000000000000000000000000000000000000000094856113c1565b928315611772571691823b156102b257600092602484928451958693849263b6b55f2560e01b845260048401525af190811561101b5750610e2c5750565b50505050565b82813d83116117a0575b61178c8183610ad9565b8101031261053d5750611734905138611706565b503d611782565b90948582813d83116117cf575b6117be8183610ad9565b8101031261053d57505193386116c1565b503d6117b4565b604080516370a0823160e01b8152306004820152906001600160a01b0360207f000000000000000000000000000000000000000000000000000000000000000082168185602481845afa94851561105257600095611950575b508351637aeceb1f60e11b81523060048201526001600160a01b039190911660248201529080826044817f000000000000000000000000000000000000000000000000000000000000000087165afa90811561105257600091611920575b506014915061189c9085610e76565b048084116118aa5750505050565b6118d6917f00000000000000000000000000000000000000000000000000000000000000001693610d81565b823b156102b2576000926024849284519586938492633be3166560e21b845260048401525af190811561101b5750611911575b808080611772565b61191a90610a93565b38611909565b82813d8311611949575b6119348183610ad9565b8101031261053d57505160149061189c61188d565b503d61192a565b90948282813d8311611978575b6119678183610ad9565b8101031261053d575051938161182f565b503d61195d565b604080516370a0823160e01b815230600482015260209391929091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168685602481845afa948515611b3457600095611b5b575b508415611316577f0000000000000000000000000000000000000000000000000000000000000000821611908115611b3f57856401000276a4915b815192878a850152898452611a2c84610abd565b611a6983519485938493630251596160e31b85523060048601528860248601528b604486015216606484015260a0608484015260a4830190610b17565b038160007380a9ae39310abf666a87c743d6ebbd0e8c42158e5af1918215611b34576000918293611afe575b5015611af757505b600160ff1b8114610d8e57611abe92611ab891600003610e43565b92610e43565b11611ac7575050565b60649250519062461bcd60e51b82526004820152600a60248201526909cdee840cadcdeeaced60b31b6044820152fd5b9050611a9d565b919092508682813d8311611b2d575b611b178183610ad9565b8101031261053d57508681519101519138611a95565b503d611b0d565b86513d6000823e3d90fd5b8573fffd8963efd1fc6a506488495d951d5263988d2591611a18565b90948782813d8311611b83575b611b728183610ad9565b8101031261053d57505193386119dd565b503d611b68565b15611b9157565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fdfea2646970667358221220ec9a1f10aa4ff8b79a6143c2b63981b527e97fbcdcb3e9f26f53fab6a0e71c2864736f6c63430008120033";

type GlpStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlpStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlpStrategy__factory extends ContractFactory {
  constructor(...args: GlpStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _gmxRewardRouter: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    _sGlp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlpStrategy> {
    return super.deploy(
      _yieldBox,
      _gmxRewardRouter,
      _glpRewardRouter,
      _sGlp,
      overrides || {}
    ) as Promise<GlpStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _gmxRewardRouter: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    _sGlp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _gmxRewardRouter,
      _glpRewardRouter,
      _sGlp,
      overrides || {}
    );
  }
  override attach(address: string): GlpStrategy {
    return super.attach(address) as GlpStrategy;
  }
  override connect(signer: Signer): GlpStrategy__factory {
    return super.connect(signer) as GlpStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlpStrategyInterface {
    return new utils.Interface(_abi) as GlpStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlpStrategy {
    return new Contract(address, _abi, signerOrProvider) as GlpStrategy;
  }
}
