/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LidoEthStrategy,
  LidoEthStrategyInterface,
} from "../../../contracts/lido/LidoEthStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_curvePool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curveStEthPool",
    outputs: [
      {
        internalType: "contract ICurveEthStEthPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "contract IStEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620019c5380380620019c5833981016040819052620000359162000159565b6001600160a01b03808516608052831660a052600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360016002556001600160a01b0383811660c05282811660e0819052600380546001600160a01b031916928416928317905560405163095ea7b360e01b8152600481019290925260001960248301529063095ea7b390604401602060405180830381600087803b158015620000fa57600080fd5b505af11580156200010f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001359190620001c1565b5050505050620001ec565b6001600160a01b03811681146200015657600080fd5b50565b600080600080608085870312156200017057600080fd5b84516200017d8162000140565b6020860151909450620001908162000140565b6040860151909350620001a38162000140565b6060860151909250620001b68162000140565b939692955090935050565b600060208284031215620001d457600080fd5b81518015158114620001e557600080fd5b9392505050565b60805160a05160c05160e05161173d62000288600039600081816102eb0152818161076f015281816109b301528181610c2a0152610d940152600081816103c8015281816108a501528181610aec01528181610b9a01528181610d1c01528181610f110152818161106b015281816110f601526111d70152600061041c015260008181610374015281816106b80152610927015261173d6000f3fe6080604052600436106101445760003560e01c80638da5cb5b116100b6578063de4065771161006f578063de40657714610362578063e30c397814610396578063e3575f0514610261578063eb6d3a11146103b6578063f3fef3a3146103ea578063f6b4dfb41461040a57600080fd5b80638da5cb5b146102a157806399940ece146102d9578063afa91cc61461030d578063ce845d1d14610261578063db2e21bc1461032d578063dc1ce8761461034257600080fd5b806348dcb0511161010857806348dcb051146102185780634cce992d1461022c5780634e71e0c81461024c57806350188301146102615780637284e41614610276578063734daaa11461028b57600080fd5b806306fdde0314610150578063078dfbe71461019357806317d70f7c146101b557806322a58c5d146101d857806330fa738c146101f657600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b50604080518082019091526008815267098d2c8de5a8aa8960c31b60208201525b60405161018a91906113f0565b60405180910390f35b34801561019f57600080fd5b506101b36101ae36600461144d565b61043e565b005b3480156101c157600080fd5b506101ca600081565b60405190815260200161018a565b3480156101e457600080fd5b506101b36101f33660046114ac565b50565b34801561020257600080fd5b5061020b600181565b60405161018a919061155d565b34801561022457600080fd5b5060006101ca565b34801561023857600080fd5b506101b3610247366004611585565b610556565b34801561025857600080fd5b506101b36105c1565b34801561026d57600080fd5b506101ca61067e565b34801561028257600080fd5b5061017d61068d565b34801561029757600080fd5b506101ca60045481565b3480156102ad57600080fd5b506000546102c1906001600160a01b031681565b6040516001600160a01b03909116815260200161018a565b3480156102e557600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561031957600080fd5b506101b3610328366004611585565b6106ad565b34801561033957600080fd5b506101ca61071d565b34801561034e57600080fd5b506003546102c1906001600160a01b031681565b34801561036e57600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a257600080fd5b506001546102c1906001600160a01b031681565b3480156103c257600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f657600080fd5b506101b361040536600461159e565b61091c565b34801561041657600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146104715760405162461bcd60e51b8152600401610468906115c8565b60405180910390fd5b8115610534576001600160a01b03831615158061048b5750805b6104cf5760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606401610468565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b6000546001600160a01b031633146105805760405162461bcd60e51b8152600401610468906115c8565b60045460408051918252602082018390527f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc910160405180910390a1600455565b6001546001600160a01b031633811461061c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152606401610468565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000610688610991565b905090565b60606040518060600160405280602b81526020016116dd602b9139905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107145760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606401610468565b6101f381610b7a565b600080546001600160a01b031633146107485760405162461bcd60e51b8152600401610468906115c8565b6040805160208101909152600090526040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156107b957600080fd5b505afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f191906115fd565b9050600061271061080383603261162c565b61080d919061164b565b600354604051630f7c084960e21b8152600160048201526000602482015260448101859052606481018390529192506001600160a01b031690633df0212490608401602060405180830381600087803b15801561086957600080fd5b505af115801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a191906115fd565b92507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108fe57600080fd5b505af1158015610912573d6000803e3d6000fd5b5050505050505090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109835760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606401610468565b61098d8282610e95565b5050565b6040516370a0823160e01b815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d91906115fd565b90506000808211610a3f576000610ac9565b600354604051635e0d443f60e01b81526001600482015260006024820152604481018490526001600160a01b0390911690635e0d443f9060640160206040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac991906115fd565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610b2e57600080fd5b505afa158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6691906115fd565b9050610b72818361166d565b935050505090565b610b8261124d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610be457600080fd5b505afa158015610bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1c91906115fd565b9050600454811115610e56577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631ea7ca896040518163ffffffff1660e01b815260040160206040518083038186803b158015610c8157600080fd5b505afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb99190611685565b15610d065760405162461bcd60e51b815260206004820152601c60248201527f4c69646f53747261746567793a207374616b696e6720706175736564000000006044820152606401610468565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610d6857600080fd5b505af1158015610d7c573d6000803e3d6000fd5b505060405163a1903eab60e01b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a1903eab915083906024016020604051808303818588803b158015610de357600080fd5b505af1158015610df7573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e1c91906115fd565b506040518181527fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d39060200160405180910390a150610e8b565b6040518281527f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca9060200160405180910390a1505b6101f36001600255565b610e9d61124d565b6000610ea7610991565b905081811015610ef95760405162461bcd60e51b815260206004820152601e60248201527f4c69646f53747261746567793a20616d6f756e74206e6f742076616c696400006044820152606401610468565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610f5b57600080fd5b505afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9391906115fd565b9050808311156110e1576000610fa982856116a9565b90506000612710610fbb8360fa61162c565b610fc5919061164b565b610fcf90836116a9565b600354604051630f7c084960e21b81526001600482015260006024820181905260448201869052606482018490529293506001600160a01b0390911690633df0212490608401602060405180830381600087803b15801561102f57600080fd5b505af1158015611043573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106791906115fd565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110c457600080fd5b505af11580156110d8573d6000803e3d6000fd5b50505050505050505b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561114057600080fd5b505afa158015611154573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117891906115fd565b9050828110156111ca5760405162461bcd60e51b815260206004820152601860248201527f4c69646f53747261746567793a206e6f7420656e6f75676800000000000000006044820152606401610468565b6111fe6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685856112a5565b836001600160a01b03167f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d88460405161123991815260200190565b60405180910390a2505061098d6001600255565b60028054141561129f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610468565b60028055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161130191906116c0565b6000604051808303816000865af19150503d806000811461133e576040519150601f19603f3d011682016040523d82523d6000602084013e611343565b606091505b509150915081801561136d57508051158061136d57508080602001905181019061136d9190611685565b6113b95760405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606401610468565b5050505050565b60005b838110156113db5781810151838201526020016113c3565b838111156113ea576000848401525b50505050565b602081526000825180602084015261140f8160408501602087016113c0565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461143a57600080fd5b919050565b80151581146101f357600080fd5b60008060006060848603121561146257600080fd5b61146b84611423565b9250602084013561147b8161143f565b9150604084013561148b8161143f565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156114be57600080fd5b813567ffffffffffffffff808211156114d657600080fd5b818401915084601f8301126114ea57600080fd5b8135818111156114fc576114fc611496565b604051601f8201601f19908116603f0116810190838211818310171561152457611524611496565b8160405282815287602084870101111561153d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b602081016005831061157f57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561159757600080fd5b5035919050565b600080604083850312156115b157600080fd5b6115ba83611423565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561160f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561164657611646611616565b500290565b60008261166857634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561168057611680611616565b500190565b60006020828403121561169757600080fd5b81516116a28161143f565b9392505050565b6000828210156116bb576116bb611616565b500390565b600082516116d28184602087016113c0565b919091019291505056fe4c69646f2d45544820737472617465677920666f722077726170706564206e617469766520617373657473a2646970667358221220f2325d07abaedbb7a3b4f5836ea660ce40dbf277c45c60fc7be9d2380004c85864736f6c63430008090033";

type LidoEthStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoEthStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoEthStrategy__factory extends ContractFactory {
  constructor(...args: LidoEthStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _stEth: PromiseOrValue<string>,
    _curvePool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoEthStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _stEth,
      _curvePool,
      overrides || {}
    ) as Promise<LidoEthStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _stEth: PromiseOrValue<string>,
    _curvePool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _stEth,
      _curvePool,
      overrides || {}
    );
  }
  override attach(address: string): LidoEthStrategy {
    return super.attach(address) as LidoEthStrategy;
  }
  override connect(signer: Signer): LidoEthStrategy__factory {
    return super.connect(signer) as LidoEthStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoEthStrategyInterface {
    return new utils.Interface(_abi) as LidoEthStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoEthStrategy {
    return new Contract(address, _abi, signerOrProvider) as LidoEthStrategy;
  }
}
