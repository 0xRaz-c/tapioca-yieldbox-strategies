/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StEthMock,
  StEthMockInterface,
} from "../../../../contracts/lido/mocks/StEthMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isStakingPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "submit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61016034620005d957601f1990601f906001600160401b03906200221f388190038481018616830192919084841183851017620004db5780839260409586528339602092839181010312620005d95751908251936200005e85620005de565b60098552818501956853744574684d6f636b60b81b87528451916200008383620005de565b600683526553544554484d60d01b84840152855198620000a38a620005de565b600190818b52858b0191603160f81b83528951848111620004db5760039081548381811c91168015620005ce575b8a821014620005b8578781116200056d575b508089888211600114620004fd57600091620004f1575b5060001982841b1c191690831b1781555b865191858311620004db5760049788548281811c91168015620004d0575b8b821014620004bb5788811162000470575b508990888511600114620004075784955090849291600095620003fb575b50501b92600019911b1c19161784555b620001748862000643565b98610120998a52620001868b62000807565b98610140998a52519020998a60e05251902061010099818b524660a052875191868301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528984015260608301524660808301523060a083015260a0825260c082019282841090841117620003e657828852815190206080523060c0526200021033620005fa565b600c805460ff19166012179055683635c9adc5dea00000600b55600954336001600160a01b039190911603620003a5575050331562000354576200025433620005fa565b3015620003155750600254908382018092116200030057506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025530835282815284832084815401905584519384523093a38361ff0019600c541617600c55519161185f9384620009c0853960805184611407015260a051846114d3015260c051846113d1015260e051846114560152518361147c0152518261075c015251816107860152f35b601190634e487b7160e01b6000525260246000fd5b60649285519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b5060849184519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b907f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726101046064938762461bcd60e51b85528060c483015260e48201520152fd5b604185634e487b7160e01b6000525260246000fd5b01519350388062000159565b92919484169289600052848b6000209460005b8d898383106200045857505050106200043d575b50505050811b01845562000169565b01519060f884600019921b161c19169055388080806200042e565b8686015189559097019694850194889350016200041a565b896000528a6000208980870160051c8201928d8810620004b1575b0160051c019083905b828110620004a45750506200013b565b6000815501839062000494565b925081926200048b565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000129565b634e487b7160e01b600052604160045260246000fd5b90508c015138620000fa565b8d908686941691856000528c600020928d6000905b8282106200054b575050841162000532575b505050811b0181556200010b565b015160001983861b60f8161c1916905538808e62000524565b929484849395979892960151815501940192018f909187959493928e62000512565b82600052896000208880840160051c8201928c8510620005ae575b0160051c019084905b828110620005a1575050620000e3565b6000815501849062000591565b9250819262000588565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000d1565b600080fd5b604081019081106001600160401b03821117620004db57604052565b600980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b80516020919082811015620006e2575090601f8251116200068157808251920151908083106200067257501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620006c8575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620006a4565b6001600160401b038111620004db576005928354926001938481811c91168015620007fc575b83821014620005b857601f8111620007c5575b5081601f84116001146200075b57509282939183926000946200074f575b50501b916000199060031b1c191617905560ff90565b01519250388062000739565b919083601f1981168760005284600020946000905b88838310620007aa575050501062000790575b505050811b01905560ff90565b015160001960f88460031b161c1916905538808062000783565b85870151885590960195948501948793509081019062000770565b8560005284601f846000209201871c820191601f8601881c015b828110620007ef5750506200071b565b60008155018590620007df565b90607f169062000708565b805160209081811015620008955750601f8251116200083457808251920151908083106200067257501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b8285106200087b575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000857565b906001600160401b038211620004db57600654926001938481811c91168015620009b4575b83821014620005b857601f81116200097a575b5081601f84116001146200090e575092829391839260009462000902575b50501b916000199060031b1c19161760065560ff90565b015192503880620008eb565b919083601f198116600660005284600020946000905b888383106200095f575050501062000945575b505050811b0160065560ff90565b015160001960f88460031b161c1916905538808062000937565b85870151885590960195948501948793509081019062000924565b600660005284601f84600020920160051c820191601f860160051c015b828110620009a7575050620008cd565b6000815501859062000997565b90607f1690620008ba56fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816306fdde0314610d6a57508063095ea7b314610d4057806318160ddd14610d215780631d0dc26714610ce95780631ea7ca8914610cce57806321442ec914610c9657806322ae81af14610c7857806323b872dd14610bae5780632e1a7d4d14610a0e578063313ce567146109ec5780633644e515146109c85780633950935114610978578063449a52f81461094b57806370a0823114610914578063715018a6146108b75780637c928fe91461089a5780637ecebe001461086257806384b0196e146107455780638da5cb5b1461071c57806395d89b4114610632578063996517cf14610613578063a1903eab146105df578063a457c2d714610538578063a9059cbb14610507578063d0e30db0146104c3578063d4a744ba1461049c578063d505accf146102e6578063d6b5a2db146102bc578063dd62ed3e14610273578063e01d55c51461024d5763f2fde38b03610011573461024957602036600319011261024957610198610e7b565b906101a1610eac565b6001600160a01b039182169283156101f7575050600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b83823461026f57602036600319011261026f57610268610eac565b35600b5580f35b5080fd5b50503461026f578060031936011261026f5780602092610291610e7b565b610299610e96565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b83823461026f57602036600319011261026f576102e3906102db610eac565b353330610fb5565b80f35b5082903461026f5760e036600319011261026f57610302610e7b565b61030a610e96565b906044359260643560843560ff81168103610498578142116104555760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610442578b525190206103ed916103e5916103bf6113ce565b908c519161190160f01b83526002830152602282015260c43591604260a435922061133f565b919091611225565b16036103ff57506102e3939450611123565b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50503461026f578160031936011261026f5760209060ff600c5460081c1690519015158152f35b50508160031936011261026f576104da34336116af565b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a280f35b50503461026f578060031936011261026f57602090610531610527610e7b565b6024359033610fb5565b5160018152f35b5082346105dc57826003193601126105dc57610552610e7b565b918360243592338152600160205281812060018060a01b038616825260205220549082821061058b576020856105318585038733611123565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b5050602036600319011261026f576020906105f8610e7b565b5061060234611752565b61060d343333610fb5565b51348152f35b50503461026f578160031936011261026f57602090600b549051908152f35b5090346102495782600319360112610249578051918381549061065482610f04565b808652926001928084169081156106f15750600114610695575b610691868661067f828b0383610f70565b51918291602083526020830190610e3b565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106106d95750505061067f82602061069195820101943861066e565b805460208787018101919091529095019481016106bb565b905061069197508693506020925061067f94915060ff191682840152151560051b820101943861066e565b50503461026f578160031936011261026f5760095490516001600160a01b039091168152602090f35b5090346102495782600319360112610249576107807f00000000000000000000000000000000000000000000000000000000000000006114f9565b926107aa7f00000000000000000000000000000000000000000000000000000000000000006115f5565b908251926020928385019585871067ffffffffffffffff88111761084f575092806108058388966107f8998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610e3b565b91898303908a0152610e3b565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061083857505050500390f35b835185528695509381019392810192600101610829565b634e487b7160e01b845260419052602483fd5b50503461026f57602036600319011261026f5760209181906001600160a01b0361088a610e7b565b1681526007845220549051908152f35b83823461026f57602036600319011261026f576102e39035611752565b83346105dc57806003193601126105dc576108d0610eac565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461026f57602036600319011261026f5760209181906001600160a01b0361093c610e7b565b16815280845220549051908152f35b50503461026f573660031901126105dc576102e3610967610e7b565b61096f610eac565b602435906116af565b50503461026f578060031936011261026f576105316020926109c161099b610e7b565b338352600186528483206001600160a01b03821684528652918490205460243590610f92565b9033611123565b50503461026f578160031936011261026f576020906109e56113ce565b9051908152f35b50503461026f578160031936011261026f5760209060ff600c54169051908152f35b503461024957602080600319360112610baa57813591338552848252828486205410610b81573315610b36573385528482528385205490838210610ae857508290338652858352038385205581600254036002558383518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833392a38380838015610ade575b8280929181923390f115610ad2577f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659192519283523392a280f35b505051903d90823e3d90fd5b6108fc9150610a97565b845162461bcd60e51b8152908101839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60849184519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b60649184519162461bcd60e51b8352820152600560248201526422b93937b960d91b6044820152fd5b8380fd5b5082903461026f57606036600319011261026f57610bca610e7b565b610bd2610e96565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610c0c575b602086610531878787610fb5565b848210610c355750918391610c2a6020969561053195033383611123565b919394819350610bfe565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461026f578160031936011261026f5760209051620151808152f35b50503461026f57602036600319011261026f5760209181906001600160a01b03610cbe610e7b565b168152600a845220549051908152f35b50503461026f578160031936011261026f5751908152602090f35b83346105dc57806003193601126105dc57610d02610eac565b600c5461ff0060ff8260081c161560081b169061ff00191617600c5580f35b50503461026f578160031936011261026f576020906002549051908152f35b50503461026f578060031936011261026f57602090610531610d60610e7b565b6024359033611123565b8490843461024957826003193601126102495782600354610d8a81610f04565b80855291600191808316908115610e135750600114610db6575b50505061067f82610691940383610f70565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610dfb5750505061067f8260206106919582010194610da4565b80546020878701810191909152909501948101610dde565b61069197508693506020925061067f94915060ff191682840152151560051b82010194610da4565b919082519283825260005b848110610e67575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e46565b600435906001600160a01b0382168203610e9157565b600080fd5b602435906001600160a01b0382168203610e9157565b6009546001600160a01b03163303610ec057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c92168015610f34575b6020831014610f1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f13565b6040810190811067ffffffffffffffff821117610f5a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610f5a57604052565b91908201809211610f9f57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156110d0571691821561107f5760008281528060205260408120549180831061102b57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156111d457169182156111845760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b600581101561132957806112365750565b600181036112835760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036112d05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003146112d957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116113c25791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156113b55781516001600160a01b038116156113af579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806114d0575b15611429577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610f5a5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611400565b60ff81146115375760ff811690601f8211611525576040519161151b83610f3e565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160055481600061154a83610f04565b808352926001908181169081156115d35750600114611574575b5061157192500382610f70565b90565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8483106115b85750611571935050810160200138611564565b8193509081602092548385890101520191019091849261159f565b90506020925061157194915060ff191682840152151560051b82010138611564565b60ff81146116175760ff811690601f8211611525576040519161151b83610f3e565b5060405160065481600061162a83610f04565b808352926001908181169081156115d35750600114611650575061157192500382610f70565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8483106116945750611571935050810160200138611564565b8193509081602092548385890101520191019091849261167b565b6001600160a01b031690811561170d577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826116f1600094600254610f92565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b60ff600c5460081c1661177c575b61177a9033600052600a60205242604060002055336116af565b565b600b5481116117e45733600052600a602052604060002054620151808101809111610f9f574210156117605760405162461bcd60e51b815260206004820152601460248201527345524332304d6f636b3a20746f6f206561726c7960601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152606490fdfea26469706673582212206c98f2447b1fbf1fa16468ae9c62dbc10d9aa9d30710dda88a70c95447df0ceb64736f6c63430008120033";

type StEthMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StEthMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StEthMock__factory extends ContractFactory {
  constructor(...args: StEthMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StEthMock> {
    return super.deploy(initialSupply, overrides || {}) as Promise<StEthMock>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): StEthMock {
    return super.attach(address) as StEthMock;
  }
  override connect(signer: Signer): StEthMock__factory {
    return super.connect(signer) as StEthMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StEthMockInterface {
    return new utils.Interface(_abi) as StEthMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StEthMock {
    return new Contract(address, _abi, signerOrProvider) as StEthMock;
  }
}
