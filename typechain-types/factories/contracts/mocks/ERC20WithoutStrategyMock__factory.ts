/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20WithoutStrategyMock,
  ERC20WithoutStrategyMockInterface,
} from "../../../contracts/mocks/ERC20WithoutStrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokn",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0346100a157601f61065738819003918201601f19168301916001600160401b038311848410176100a65780849260409485528339810103126100a15780516001600160a01b039182821682036100a157602001519182168092036100a15760805260a05260405161059a90816100bd823960805181818161010b0152818161026101526102a8015260a05181818160ab01528181610177015261040f0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b600090813560e01c806306fdde031461031657806317d70f7c146102fc57806330fa738c146102e157806350188301146102485780637284e416146102dc578063afa91cc614610290578063ce845d1d14610248578063de4065771461024d578063e3575f0514610248578063f3fef3a3146100de5763f6b4dfb41461009857600080fd5b346100da57816003193601126100da57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50346100da57806003193601126100da576001600160a01b036004358181169081900361024457610132827f00000000000000000000000000000000000000000000000000000000000000001633146104c8565b8251602081019163a9059cbb60e01b835260248201526024356044820152604481526080810181811067ffffffffffffffff82111761023057845251849283929083907f0000000000000000000000000000000000000000000000000000000000000000165af16101a1610503565b816101f4575b50156101b1575080f35b5162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b8051801592508215610209575b5050386101a7565b819250906020918101031261022c5760200151801515810361022c573880610201565b8280fd5b634e487b7160e01b86526041600452602486fd5b8380fd5b6103bd565b50346100da57816003193601126100da57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b82346102d95760203660031901126102d9576102d6337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146104c8565b80f35b80fd5b610316565b50346100da57816003193601126100da576020905160018152f35b50346100da57816003193601126100da5751908152602090f35b346103b8576000806003193601126102d9576040805181810181811067ffffffffffffffff8211176103a4578252600b81526020906a4e6f20737472617465677960a81b8282015282519382859384528251928382860152825b84811061038e57505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610370565b634e487b7160e01b84526041600452602484fd5b600080fd5b346103b8576000806003193601126102d957604051602090818101906370a0823160e01b8252306024820152602481526060810181811067ffffffffffffffff8211176104b4576040525183918291907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa610441610503565b90806104a9575b1561046457818180518101031261022c57810151604051908152f35b60405162461bcd60e51b815260048101839052601d60248201527f426f72696e6745524332303a2042616c616e63654f66206661696c65640000006044820152606490fd5b508181511015610448565b634e487b7160e01b85526041600452602485fd5b156104cf57565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fd5b3d1561055f5767ffffffffffffffff903d8281116105495760405192601f8201601f19908116603f01168401908111848210176105495760405282523d6000602084013e565b634e487b7160e01b600052604160045260246000fd5b60609056fea2646970667358221220f5b31ad27491b6d0d430504354d623c46d4d5a1462f6a653f14f0a35a1026a6564736f6c63430008120033";

type ERC20WithoutStrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20WithoutStrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20WithoutStrategyMock__factory extends ContractFactory {
  constructor(...args: ERC20WithoutStrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    tokn: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20WithoutStrategyMock> {
    return super.deploy(
      _yieldBox,
      tokn,
      overrides || {}
    ) as Promise<ERC20WithoutStrategyMock>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    tokn: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, tokn, overrides || {});
  }
  override attach(address: string): ERC20WithoutStrategyMock {
    return super.attach(address) as ERC20WithoutStrategyMock;
  }
  override connect(signer: Signer): ERC20WithoutStrategyMock__factory {
    return super.connect(signer) as ERC20WithoutStrategyMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WithoutStrategyMockInterface {
    return new utils.Interface(_abi) as ERC20WithoutStrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20WithoutStrategyMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20WithoutStrategyMock;
  }
}
