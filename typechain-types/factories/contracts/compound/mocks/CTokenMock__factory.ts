/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CTokenMock,
  CTokenMockInterface,
} from "../../../../contracts/compound/mocks/CTokenMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160346200068357601f6200238738819003918201601f19168301916001600160401b038311848410176200054d578084926020946040528339810103126200068357516001600160a01b03811681036200068357604051620000638162000688565b600a815260208101906943546f6b656e4d6f636b60b01b8252604051926200008b8462000688565b600384526243544d60e81b602085015260405193620000aa8562000688565b60018552603160f81b602086015282516001600160401b0381116200054d57600354600181811c9116801562000678575b60208210146200066257601f8111620005f8575b50806020601f82116001146200056f5760009162000563575b508160011b916000199060031b1c1916176003555b80516001600160401b0381116200054d576004918254600181811c9116801562000542575b60208210146200052d579081601f849311620004d5575b50602090601f83116001146200046a576000926200045e575b50508160011b916000199060031b1c19161781555b6200019283620006ed565b93610120948552620001a486620008b1565b93610140948552519020948560e0526020815191012094610100958087524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081019181831060018060401b03841117620004495782604052815190206080523060c0526200023d33620006a4565b600c805460ff19166012179055683635c9adc5dea00000600b55600954336001600160a01b039190911603620004065750503315620003b3576200028133620006a4565b30156200036f5760025469152d02c7e14af6800000918282018092116200035a575090859291600255306000526000602052604060002081815401905560405190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203093a3600c549062010000600160b01b039060101b1690610100600160b01b0319161717600c556040519161191d938462000a6a8539608051846113be015260a0518461148a015260c05184611388015260e0518461140d0152518361143301525182610793015251816107bd0152f35b601190634e487b7160e01b6000525260246000fd5b60649060206040519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b60849060206040519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b907f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657261010460649362461bcd60e51b8452602060c4820152602060e48201520152fd5b604184634e487b7160e01b6000525260246000fd5b01519050388062000172565b6000858152602081209350601f198516905b818110620004bc5750908460019594939210620004a2575b505050811b01815562000187565b015160001960f88460031b161c1916905538808062000494565b929360206001819287860151815501950193016200047c565b909150836000526020600020601f840160051c8101916020851062000522575b90601f859493920160051c01905b81811062000512575062000159565b6000815584935060010162000503565b9091508190620004f5565b602284634e487b7160e01b6000525260246000fd5b90607f169062000142565b634e487b7160e01b600052604160045260246000fd5b90508401513862000108565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9250601f198416905b818110620005df57509083600194939210620005c5575b5050811b016003556200011d565b86015160001960f88460031b161c191690553880620005b7565b9192602060018192868b015181550194019201620005a0565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841062000657575b601f0160051c01905b8181106200064a5750620000ef565b600081556001016200063b565b909150819062000632565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000db565b600080fd5b604081019081106001600160401b038211176200054d57604052565b600980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b805160209190828110156200078c575090601f8251116200072b57808251920151908083106200071c57501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000772575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200074e565b6001600160401b0381116200054d576005928354926001938481811c91168015620008a6575b838210146200066257601f81116200086f575b5081601f8411600114620008055750928293918392600094620007f9575b50501b916000199060031b1c191617905560ff90565b015192503880620007e3565b919083601f1981168760005284600020946000905b888383106200085457505050106200083a575b505050811b01905560ff90565b015160001960f88460031b161c191690553880806200082d565b8587015188559096019594850194879350908101906200081a565b8560005284601f846000209201871c820191601f8601881c015b82811062000899575050620007c5565b6000815501859062000889565b90607f1690620007b2565b8051602090818110156200093f5750601f825111620008de57808251920151908083106200071c57501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000925575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000901565b906001600160401b0382116200054d57600654926001938481811c9116801562000a5e575b838210146200066257601f811162000a24575b5081601f8411600114620009b85750928293918392600094620009ac575b50501b916000199060031b1c19161760065560ff90565b01519250388062000995565b919083601f198116600660005284600020946000905b8883831062000a095750505010620009ef575b505050811b0160065560ff90565b015160001960f88460031b161c19169055388080620009e1565b858701518855909601959485019487935090810190620009ce565b600660005284601f84600020920160051c820191601f860160051c015b82811062000a5157505062000977565b6000815501859062000a41565b90607f16906200096456fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816306fdde0314610d2157508063095ea7b314610cf75780631249c58b14610cb757806318160ddd14610c98578063182df0f514610c755780631d0dc26714610c3d57806321442ec914610c0557806322ae81af14610be757806323b872dd14610b1d5780632e1a7d4d14610a72578063313ce56714610a505780633644e51514610a2c57806339509351146109dc578063449a52f8146109af5780636f307dc31461098257806370a082311461094b578063715018a6146108ee5780637c928fe9146108d15780637ecebe001461089957806384b0196e1461077c5780638da5cb5b1461075357806395d89b4114610669578063996517cf1461064a578063a457c2d7146105a3578063a9059cbb14610572578063d0e30db01461052e578063d4a744ba14610507578063d505accf14610351578063d6b5a2db14610327578063db006a75146102d2578063dd62ed3e14610289578063e01d55c5146102635763f2fde38b03610011573461025f57602036600319011261025f576101ae610e32565b906101b7610e63565b6001600160a01b0391821692831561020d575050600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b8382346102855760203660031901126102855761027e610e63565b35600b5580f35b5080fd5b505034610285578060031936011261028557806020926102a7610e32565b6102af610e4d565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b503461025f57602036600319011261025f573590828083801561031d575b8280929181923390f115610312576020925061030c8233611666565b51908152f35b51913d9150823e3d90fd5b6108fc91506102f0565b8382346102855760203660031901126102855761034e90610346610e63565b353330610f6c565b80f35b508290346102855760e03660031901126102855761036d610e32565b610375610e4d565b906044359260643560843560ff81168103610503578142116104c05760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff8211176104ad578b52519020610458916104509161042a611385565b908c519161190160f01b83526002830152602282015260c43591604260a43592206112f6565b9190916111dc565b160361046a575061034e9394506110da565b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50503461028557816003193601126102855760209060ff600c5460081c1690519015158152f35b50508160031936011261028557610545343361176d565b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a280f35b50503461028557806003193601126102855760209061059c610592610e32565b6024359033610f6c565b5160018152f35b5082346106475782600319360112610647576105bd610e32565b918360243592338152600160205281812060018060a01b03861682526020522054908282106105f65760208561059c85850387336110da565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b505034610285578160031936011261028557602090600b549051908152f35b50903461025f578260031936011261025f578051918381549061068b82610ebb565b8086529260019280841690811561072857506001146106cc575b6106c886866106b6828b0383610f27565b51918291602083526020830190610df2565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828610610710575050506106b68260206106c89582010194386106a5565b805460208787018101919091529095019481016106f2565b90506106c89750869350602092506106b694915060ff191682840152151560051b82010194386106a5565b50503461028557816003193601126102855760095490516001600160a01b039091168152602090f35b50903461025f578260031936011261025f576107b77f00000000000000000000000000000000000000000000000000000000000000006114b0565b926107e17f00000000000000000000000000000000000000000000000000000000000000006115ac565b908251926020928385019585871067ffffffffffffffff8811176108865750928061083c83889661082f998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610df2565b91898303908a0152610df2565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061086f57505050500390f35b835185528695509381019392810192600101610860565b634e487b7160e01b845260419052602483fd5b5050346102855760203660031901126102855760209181906001600160a01b036108c1610e32565b1681526007845220549051908152f35b8382346102855760203660031901126102855761034e9035611810565b8334610647578060031936011261064757610907610e63565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102855760203660031901126102855760209181906001600160a01b03610973610e32565b16815280845220549051908152f35b505034610285578160031936011261028557600c54905160109190911c6001600160a01b03168152602090f35b505034610285573660031901126106475761034e6109cb610e32565b6109d3610e63565b6024359061176d565b50503461028557806003193601126102855761059c602092610a256109ff610e32565b338352600186528483206001600160a01b03821684528652918490205460243590610f49565b90336110da565b505034610285578160031936011261028557602090610a49611385565b9051908152f35b50503461028557816003193601126102855760209060ff600c54169051908152f35b50903461025f57602036600319011261025f5781359133845283602052828285205410610af35750610aa48233611666565b8280838015610ae9575b8280929181923390f11561031257519081527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6560203392a280f35b6108fc9150610aae565b6020606492519162461bcd60e51b8352820152600560248201526422b93937b960d91b6044820152fd5b5082903461028557606036600319011261028557610b39610e32565b610b41610e4d565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610b7b575b60208661059c878787610f6c565b848210610ba45750918391610b996020969561059c950333836110da565b919394819350610b6d565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461028557816003193601126102855760209051620151808152f35b5050346102855760203660031901126102855760209181906001600160a01b03610c2d610e32565b168152600a845220549051908152f35b8334610647578060031936011261064757610c56610e63565b600c5461ff0060ff8260081c161560081b169061ff00191617600c5580f35b50503461028557816003193601126102855760209051670de0b6b3a76400008152f35b5050346102855781600319360112610285576020906002549051908152f35b508280600319360112610647576063193401348111610ce45780610cdd61034e92611810565b3333610f6c565b506011602492634e487b7160e01b835252fd5b50503461028557806003193601126102855760209061059c610d17610e32565b60243590336110da565b8490843461025f578260031936011261025f5782600354610d4181610ebb565b80855291600191808316908115610dca5750600114610d6d575b5050506106b6826106c8940383610f27565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610db2575050506106b68260206106c89582010194610d5b565b80546020878701810191909152909501948101610d95565b6106c89750869350602092506106b694915060ff191682840152151560051b82010194610d5b565b919082519283825260005b848110610e1e575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610dfd565b600435906001600160a01b0382168203610e4857565b600080fd5b602435906001600160a01b0382168203610e4857565b6009546001600160a01b03163303610e7757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c92168015610eeb575b6020831014610ed557565b634e487b7160e01b600052602260045260246000fd5b91607f1691610eca565b6040810190811067ffffffffffffffff821117610f1157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610f1157604052565b91908201809211610f5657565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215611087571691821561103657600082815280602052604081205491808310610fe257604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561118b571691821561113b5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60058110156112e057806111ed5750565b6001810361123a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036112875760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461129057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116113795791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561136c5781516001600160a01b03811615611366579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611487575b156113e0577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610f115760405251902090565b507f000000000000000000000000000000000000000000000000000000000000000046146113b7565b60ff81146114ee5760ff811690601f82116114dc57604051916114d283610ef5565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160055481600061150183610ebb565b8083529260019081811690811561158a575060011461152b575b5061152892500382610f27565b90565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b84831061156f575061152893505081016020013861151b565b81935090816020925483858901015201910190918492611556565b90506020925061152894915060ff191682840152151560051b8201013861151b565b60ff81146115ce5760ff811690601f82116114dc57604051916114d283610ef5565b506040516006548160006115e183610ebb565b8083529260019081811690811561158a5750600114611607575061152892500382610f27565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b84831061164b575061152893505081016020013861151b565b81935090816020925483858901015201910190918492611632565b6001600160a01b0316801561171e576000918183528260205260408320548181106116ce57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b6001600160a01b03169081156117cb577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826117af600094600254610f49565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b60ff600c5460081c1661183a575b6118389033600052600a602052426040600020553361176d565b565b600b5481116118a25733600052600a602052604060002054620151808101809111610f565742101561181e5760405162461bcd60e51b815260206004820152601460248201527345524332304d6f636b3a20746f6f206561726c7960601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152606490fdfea2646970667358221220f453ac616c7bfad0f17ff0ff2583b13a581347cdbc9f8e3a8e708891287c73ab64736f6c63430008120033";

type CTokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CTokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CTokenMock__factory extends ContractFactory {
  constructor(...args: CTokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _underlying: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CTokenMock> {
    return super.deploy(_underlying, overrides || {}) as Promise<CTokenMock>;
  }
  override getDeployTransaction(
    _underlying: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_underlying, overrides || {});
  }
  override attach(address: string): CTokenMock {
    return super.attach(address) as CTokenMock;
  }
  override connect(signer: Signer): CTokenMock__factory {
    return super.connect(signer) as CTokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTokenMockInterface {
    return new utils.Interface(_abi) as CTokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTokenMock {
    return new Contract(address, _abi, signerOrProvider) as CTokenMock;
  }
}
