/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StargateStrategy,
  StargateStrategyInterface,
} from "../../../contracts/stargate/StargateStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpStaking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingPid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stgEthPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "MultiSwapper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityRouter",
    outputs: [
      {
        internalType: "contract IRouterETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpRouterPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpStaking",
    outputs: [
      {
        internalType: "contract ILPStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpStakingPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setMultiSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stgEthPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stgNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stgTokenReward",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract IStargateSwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200284f3803806200284f833981016040819052620000359162000441565b6001600160a01b03808916608052871660a052600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360016002556001600160a01b0387811660c052600380546001600160a01b0319908116858416179091556004805490911683831617815587821660e081905291871661012052600586905560408051632a795bcf60e21b8152905163a9e56f3c92828101926020929190829003018186803b1580156200010657600080fd5b505afa1580156200011b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001419190620004f6565b6001600160a01b0316610100816001600160a01b03168152505060e0516001600160a01b0316633e0dc34e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200019757600080fd5b505afa158015620001ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d291906200051d565b61ffff16600655600780546001600160a01b0319166001600160a01b0385811691821790925560405163095ea7b360e01b8152918716600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200023a57600080fd5b505af11580156200024f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000275919062000543565b506007546101005160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b390604401602060405180830381600087803b158015620002c957600080fd5b505af1158015620002de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000304919062000543565b50610120516001600160a01b0316636c099dee6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200034257600080fd5b505afa15801562000357573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037d9190620004f6565b600880546001600160a01b0319166001600160a01b0392831690811790915560405163095ea7b360e01b8152918416600483015260001960248301529063095ea7b390604401602060405180830381600087803b158015620003de57600080fd5b505af1158015620003f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000419919062000543565b50505050505050505062000567565b6001600160a01b03811681146200043e57600080fd5b50565b600080600080600080600080610100898b0312156200045f57600080fd5b88516200046c8162000428565b60208a01519098506200047f8162000428565b60408a0151909750620004928162000428565b60608a0151909650620004a58162000428565b60808a015160a08b01519196509450620004bf8162000428565b60c08a0151909350620004d28162000428565b60e08a0151909250620004e58162000428565b809150509295985092959890939650565b6000602082840312156200050957600080fd5b8151620005168162000428565b9392505050565b6000602082840312156200053057600080fd5b815161ffff811681146200051657600080fd5b6000602082840312156200055657600080fd5b815180151581146200051657600080fd5b60805160a05160c05160e05161010051610120516121e96200066660003960008181610432015281816107280152818161084e01528181610c0301528181610faa0152818161104901528181611568015281816116d401526119c90152600081816105cb015281816110e10152611a610152600081816104ef015261145b0152600081816105230152818161097501528181610a5701528181610b3d01528181610cb80152818161116d015281816113f501528181611637015281816117a0015281816118fc01528181611aea01528181611b730152611c480152600061059701526000818161049b01528181610edc015261137901526121e96000f3fe6080604052600436106101dc5760003560e01c80637e9e576c11610102578063e30c397811610095578063ec32e1b911610064578063ec32e1b914610545578063f3fef3a314610565578063f6b4dfb414610585578063f887ea40146105b957600080fd5b8063e30c3978146104bd578063e3575f0514610374578063e9e6d512146104dd578063eb6d3a111461051157600080fd5b8063afa91cc6116100d1578063afa91cc614610454578063ce845d1d14610374578063db2e21bc14610474578063de4065771461048957600080fd5b80637e9e576c146103d45780638da5cb5b146103ea5780639a3f7aa01461040a5780639bf1401c1461042057600080fd5b806347b3f37c1161017a57806350188301116101495780635018830114610374578063637d895d146103895780637284e416146103a9578063734daaa1146103be57600080fd5b806347b3f37c1461030a57806348dcb0511461032a5780634cce992d1461033f5780634e71e0c81461035f57600080fd5b806322a58c5d116101b657806322a58c5d146102705780632b3297f91461029057806330fa738c146102c857806341852dc2146102ea57600080fd5b806306fdde03146101e8578063078dfbe71461022b57806317d70f7c1461024d57600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b50604080518082019091526008815267537461726761746560c01b60208201525b6040516102229190611e5d565b60405180910390f35b34801561023757600080fd5b5061024b610246366004611eba565b6105ed565b005b34801561025957600080fd5b50610262600081565b604051908152602001610222565b34801561027c57600080fd5b5061024b61028b366004611f19565b610705565b34801561029c57600080fd5b506003546102b0906001600160a01b031681565b6040516001600160a01b039091168152602001610222565b3480156102d457600080fd5b506102dd600181565b6040516102229190611fca565b3480156102f657600080fd5b506007546102b0906001600160a01b031681565b34801561031657600080fd5b506004546102b0906001600160a01b031681565b34801561033657600080fd5b50610262610bd6565b34801561034b57600080fd5b5061024b61035a366004611ff2565b610d7a565b34801561036b57600080fd5b5061024b610de5565b34801561038057600080fd5b50610262610ea2565b34801561039557600080fd5b506008546102b0906001600160a01b031681565b3480156103b557600080fd5b50610215610eb1565b3480156103ca57600080fd5b5061026260095481565b3480156103e057600080fd5b5061026260055481565b3480156103f657600080fd5b506000546102b0906001600160a01b031681565b34801561041657600080fd5b5061026260065481565b34801561042c57600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561046057600080fd5b5061024b61046f366004611ff2565b610ed1565b34801561048057600080fd5b50610262610f44565b34801561049557600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b3480156104c957600080fd5b506001546102b0906001600160a01b031681565b3480156104e957600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561051d57600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561055157600080fd5b5061024b61056036600461200b565b6111e3565b34801561057157600080fd5b5061024b61058036600461202d565b61136e565b34801561059157600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b3480156105c557600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146106205760405162461bcd60e51b815260040161061790612057565b60405180910390fd5b81156106e3576001600160a01b03831615158061063a5750805b61067e5760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606401610617565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b600554604051632f607fdd60e01b815260048101919091523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f607fdd9060440160206040518083038186803b15801561077257600080fd5b505afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa919061208c565b90508015610bd2576008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156107f657600080fd5b505afa15801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e919061208c565b604051631c57762b60e31b815260026004820152600060248201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b15801561089a57600080fd5b505af11580156108ae573d6000803e3d6000fd5b50506008546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b1580156108f857600080fd5b505afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610930919061208c565b905081811115610bcf57600061094683836120bb565b6003546008546004805460405163a62d372560e01b81529182018590526001600160a01b0392831660248301527f0000000000000000000000000000000000000000000000000000000000000000831660448301528216606482015260a06084820152600060a4820181905293945091169063a62d37259060c40160206040518083038186803b1580156109d957600080fd5b505afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a11919061208c565b90506000612710610a238360326120d2565b610a2d91906120f1565b610a3790836120bb565b6003546008549192506001600160a01b0390811691638bce137e918691167f0000000000000000000000000000000000000000000000000000000000000000610a8242610e10612113565b6040516001600160e01b031960e087901b16815260048101949094526001600160a01b0392831660248501529116604483015260648201526084810184905260c060a4820152600060c482015260e401602060405180830381600087803b158015610aec57600080fd5b505af1158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b24919061208c565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610b8757600080fd5b505afa158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf919061208c565b9050610bca816113df565b505050505b50505b5050565b600554604051632f607fdd60e01b8152600481019190915230602482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632f607fdd9060440160206040518083038186803b158015610c4557600080fd5b505afa158015610c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7d919061208c565b6000925090508015610d76576003546008546004805460405163a62d372560e01b81529182018590526001600160a01b0392831660248301527f0000000000000000000000000000000000000000000000000000000000000000831660448301528216606482015260a06084820152600060a482015291169063a62d37259060c40160206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f919061208c565b9150612710610d5f8360326120d2565b610d6991906120f1565b610d7390836120bb565b91505b5090565b6000546001600160a01b03163314610da45760405162461bcd60e51b815260040161061790612057565b60095460408051918252602082018390527f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc910160405180910390a1600955565b6001546001600160a01b0316338114610e405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152606401610617565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000610eac611615565b905090565b60606040518060600160405280602b8152602001612189602b9139905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f385760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606401610617565b610f4181611780565b50565b600080546001600160a01b03163314610f6f5760405162461bcd60e51b815260040161061790612057565b610f8760405180602001604052806000815250610705565b6005546040516393f1a40b60e01b815260048101919091523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906393f1a40b90604401604080518083038186803b158015610ff357600080fd5b505afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b919061212b565b50600554604051630441a3e760e41b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163441a3e7091611087918590600401918252602082015260400190565b600060405180830381600087803b1580156110a157600080fd5b505af11580156110b5573d6000803e3d6000fd5b505060065460405163c4de93a560e01b815261ffff9091166004820152602481018490523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063c4de93a59150606401602060405180830381600087803b15801561112f57600080fd5b505af1158015611143573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611167919061208c565b504791507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156111c657600080fd5b505af11580156111da573d6000803e3d6000fd5b50505050505090565b6000546001600160a01b0316331461120d5760405162461bcd60e51b815260040161061790612057565b6003546040516001600160a01b038084169216907fe36d79dcda63d47bee388b7dde8bba0b326a1b459889de48dc94dcf3504eda4b90600090a360085460035460405163095ea7b360e01b81526001600160a01b0391821660048201526000602482015291169063095ea7b390604401602060405180830381600087803b15801561129757600080fd5b505af11580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf919061214f565b50600380546001600160a01b0319166001600160a01b0383811691821790925560085460405163095ea7b360e01b8152600481019290925260001960248301529091169063095ea7b390604401602060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd2919061214f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113d55760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606401610617565b610bd28282611875565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561144157600080fd5b505af1158015611455573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ed995307826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156114b457600080fd5b505af11580156114c8573d6000803e3d6000fd5b50506007546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a08231915060240160206040518083038186803b15801561151357600080fd5b505afa158015611527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154b919061208c565b600554604051631c57762b60e31b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163e2bbb158916115a6918590600401918252602082015260400190565b600060405180830381600087803b1580156115c057600080fd5b505af11580156115d4573d6000803e3d6000fd5b505050507fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d38260405161160991815260200190565b60405180910390a15050565b6040516370a0823160e01b815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561167957600080fd5b505afa15801561168d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b1919061208c565b6005546040516393f1a40b60e01b815260048101919091523060248201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906393f1a40b90604401604080518083038186803b15801561171d57600080fd5b505afa158015611731573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611755919061212b565b5091506000611762610bd6565b90508061176f8385612113565b6117799190612113565b9250505090565b611788611cbe565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156117ea57600080fd5b505afa1580156117fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611822919061208c565b905060095481111561183757611837816113df565b6040518281527f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca9060200160405180910390a150610f416001600255565b61187d611cbe565b6000611887611615565b9050818110156118e45760405162461bcd60e51b815260206004820152602260248201527f537461726761746553747261746567793a20616d6f756e74206e6f742076616c6044820152611a5960f21b6064820152608401610617565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197e919061208c565b905080831115611b5e576119a060405180602001604052806000815250610705565b60006119ac82856120bb565b600554604051630441a3e760e41b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163441a3e7091611a07918590600401918252602082015260400190565b600060405180830381600087803b158015611a2157600080fd5b505af1158015611a35573d6000803e3d6000fd5b505060065460405163c4de93a560e01b815261ffff9091166004820152602481018490523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063c4de93a59150606401602060405180830381600087803b158015611aaf57600080fd5b505af1158015611ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae7919061208c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b4357600080fd5b505af1158015611b57573d6000803e3d6000fd5b5050505050505b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015611bbd57600080fd5b505afa158015611bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf5919061208c565b831115611c3b5760405162461bcd60e51b81526020600482015260146024820152730a6e8c2e4cec2e8ca7440dcdee840cadcdeeaced60631b6044820152606401610617565b611c6f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168585611d16565b836001600160a01b03167f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d884604051611caa91815260200190565b60405180910390a25050610bd26001600255565b600280541415611d105760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610617565b60028055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611d72919061216c565b6000604051808303816000865af19150503d8060008114611daf576040519150601f19603f3d011682016040523d82523d6000602084013e611db4565b606091505b5091509150818015611dde575080511580611dde575080806020019051810190611dde919061214f565b611e2a5760405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606401610617565b5050505050565b60005b83811015611e4c578181015183820152602001611e34565b83811115610bcf5750506000910152565b6020815260008251806020840152611e7c816040850160208701611e31565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611ea757600080fd5b919050565b8015158114610f4157600080fd5b600080600060608486031215611ecf57600080fd5b611ed884611e90565b92506020840135611ee881611eac565b91506040840135611ef881611eac565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611f2b57600080fd5b813567ffffffffffffffff80821115611f4357600080fd5b818401915084601f830112611f5757600080fd5b813581811115611f6957611f69611f03565b604051601f8201601f19908116603f01168101908382118183101715611f9157611f91611f03565b81604052828152876020848701011115611faa57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020810160058310611fec57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561200457600080fd5b5035919050565b60006020828403121561201d57600080fd5b61202682611e90565b9392505050565b6000806040838503121561204057600080fd5b61204983611e90565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561209e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156120cd576120cd6120a5565b500390565b60008160001904831182151516156120ec576120ec6120a5565b500290565b60008261210e57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612126576121266120a5565b500190565b6000806040838503121561213e57600080fd5b505080516020909101519092909150565b60006020828403121561216157600080fd5b815161202681611eac565b6000825161217e818460208701611e31565b919091019291505056fe537461726761746520737472617465677920666f722077726170706564206e617469766520617373657473a2646970667358221220068e9fa6ca4138812e6145cc4e70c3e702104f9d5db82129ca493cffec1fc1a264736f6c63430008090033";

type StargateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateStrategy__factory extends ContractFactory {
  constructor(...args: StargateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _ethRouter: PromiseOrValue<string>,
    _lpStaking: PromiseOrValue<string>,
    _stakingPid: PromiseOrValue<BigNumberish>,
    _lpToken: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _stgEthPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _ethRouter,
      _lpStaking,
      _stakingPid,
      _lpToken,
      _swapper,
      _stgEthPool,
      overrides || {}
    ) as Promise<StargateStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _ethRouter: PromiseOrValue<string>,
    _lpStaking: PromiseOrValue<string>,
    _stakingPid: PromiseOrValue<BigNumberish>,
    _lpToken: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _stgEthPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _ethRouter,
      _lpStaking,
      _stakingPid,
      _lpToken,
      _swapper,
      _stgEthPool,
      overrides || {}
    );
  }
  override attach(address: string): StargateStrategy {
    return super.attach(address) as StargateStrategy;
  }
  override connect(signer: Signer): StargateStrategy__factory {
    return super.connect(signer) as StargateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateStrategyInterface {
    return new utils.Interface(_abi) as StargateStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateStrategy {
    return new Contract(address, _abi, signerOrProvider) as StargateStrategy;
  }
}
