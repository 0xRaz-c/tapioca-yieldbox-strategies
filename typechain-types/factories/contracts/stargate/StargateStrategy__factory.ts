/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StargateStrategy,
  StargateStrategyInterface,
} from "../../../contracts/stargate/StargateStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpStaking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingPid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stgEthPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "MultiSwapper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityRouter",
    outputs: [
      {
        internalType: "contract IRouterETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpRouterPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpStaking",
    outputs: [
      {
        internalType: "contract ILPStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpStakingPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setMultiSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stgEthPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stgNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stgTokenReward",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract IStargateSwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101408060405234620004135780620028f28038038091620000228285620004f1565b833961010092839181010312620004135780516001600160a01b0381168103620004135762000054602083016200052b565b62000062604084016200052b565b90602062000073606086016200052b565b9360046080870151936200008a60a089016200052b565b95620000a760e06200009f60c08c016200052b565b9a016200052b565b936080528160a0523360018060a01b0319600054161760005560405195869485933360007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002556001600160a01b0390811660c052600380546001600160a01b03199081168e84161790915586541691811691909117855591821660e081905291891661012052600555632a795bcf60e21b82525afa908115620003c457600091620004af575b506001600160a01b03908116855260e051604051631f06e1a760e11b81529160209183916004918391165afa8015620003c45760009062000469575b61ffff1660065550600780546001600160a01b0319166001600160a01b0392831690811790915560405163095ea7b360e01b80825293909216600483015260001960248301819052939190602090829060449082906000905af18015620003c45762000445575b5060075484516040518481526001600160a01b039182166004820152602481018690529160209183916044918391600091165af18015620003c45762000421575b5061012051604051633604cef760e11b815290602090829060049082906001600160a01b03165afa908115620003c457600091620003d0575b50600880546001600160a01b0319166001600160a01b0392831690811790915560405193845291166004830152602482019290925290602090829060449082906000905af18015620003c4576200038e575b5060405161239791826200055b833960805182818161024201528181610c4e015261125c015260a051826101e1015260c05182818161028201528181610b9801528181610e0601528181610fcf015281816112a30152818161185401528181611ea301528181611fb301526121b3015260e051828181610bdc015261200e01525181818161019a015281816105a10152610dd00152610120518181816104d201528181610cd9015281816113890152818161175701528181611e350152818161208f01526122110152f35b620003b49060203d602011620003bc575b620003ab8183620004f1565b81019062000540565b5038620002c3565b503d6200039f565b6040513d6000823e3d90fd5b90506020813d60201162000418575b81620003ee60209383620004f1565b8101031262000413576020926000620004096044936200052b565b9250509262000271565b600080fd5b3d9150620003df565b6200043d9060203d602011620003bc57620003ab8183620004f1565b503862000238565b620004619060203d602011620003bc57620003ab8183620004f1565b5038620001f7565b506020813d602011620004a6575b816200048660209383620004f1565b8101031262000413575161ffff81168103620004135761ffff9062000190565b3d915062000477565b90506020813d602011620004e8575b81620004cd60209383620004f1565b810103126200041357620004e1906200052b565b3862000154565b3d9150620004be565b601f909101601f19168101906001600160401b038211908210176200051557604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200041357565b90816020910312620004135751801515810362000413579056fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c91826306fdde0314611bf657508163078dfbe714611ae957816317d70f7c14611ace57816322a58c5d146116c75781632b3297f91461169e57816330fa738c1461168257816341852dc21461165957816347b3f37c1461163157816348dcb0511461160d5781634cce992d146115ad5781634e71e0c8146114fa5781635018830114610c0b578163637d895d146114d15781637284e4161461143d578163734daaa11461141e5781637e9e576c146113ff5781638da5cb5b146113d75781639a3f7aa0146113b85781639bf1401c14611374578163afa91cc614611235578163ce845d1d14610c0b578163db2e21bc14610c7d578163de40657714610c39578163e30c397814610c10578163e3575f0514610c0b578163e9e6d51214610bc7578163eb6d3a1114610b83578163ec32e1b914610a47578163f3fef3a31461021057508063f6b4dfb4146101cd5763f887ea40146101875780610012565b346101c957816003193601126101c957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50346101c957816003193601126101c957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90503461094b578160031936011261094b5761022a611ca2565b6001600160a01b0392909160248035929190610269337f00000000000000000000000000000000000000000000000000000000000000008816146122d2565b61027161230d565b8361027a61218a565b106109fb57857f0000000000000000000000000000000000000000000000000000000000000000168351956370a0823160e01b80885230858901528960209889818781885afa9081156106135782916109ca575b508089116104a8575b50508551908152308582015287818581865afa90811561049e578a9161046c575b508611610433578451978789019163a9059cbb60e01b835216978884820152866044820152604481526080810181811067ffffffffffffffff82111761041f57865251899283929083905af13d15610418573d61035481611d20565b9061036186519283611cfe565b81523d898883013e5b816103e8575b50156103a8575050519081527f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d89190a2600160025580f35b601c9085606494519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b80518015925087908315610400575b50505038610370565b6104109350820181019101611f6e565b3886816103f7565b606061036a565b84604187634e487b7160e01b600052526000fd5b845162461bcd60e51b8152808501889052601481850152730a6e8c2e4cec2e8ca7440dcdee840cadcdeeaced60631b6044820152606490fd5b90508781813d8311610497575b6104838183611cfe565b810103126104925751386102f8565b600080fd5b503d610479565b86513d8c823e3d90fd5b8188516104b481611ce2565b526005548851632f607fdd60e01b81528089019182523060208301527f00000000000000000000000000000000000000000000000000000000000000008d1692918c90829081906040010381865afa908115610858579084939291899591610996575b5061066e575b61052a919293508a611de2565b90600554813b1561066a57839060448a838d519586948593630441a3e760e41b8552840152878d8401525af1801561064c57908391610656575b50600654895163c4de93a560e01b815261ffff9091168982019081526020810184905230604082015290918c9183918f91839190829060600103927f0000000000000000000000000000000000000000000000000000000000000000165af1801561064c57908b9161061d575b5050843b156101c957818791895192838092630d0e30db60e41b8252895af1801561061357156102d75761060490611cb8565b61060f5789386102d7565b8980fd5b88513d84823e3d90fd5b90809293503d8311610645575b6106348183611cfe565b81010312610492578a9089386105d1565b503d61062a565b89513d85823e3d90fd5b61065f90611cb8565b6101c9578138610564565b8380fd5b8b8d600854168b51958680928982528d30908301525afa93841561098c578394610959575b50813b1561094b578951631c57762b60e31b815260028a820152888101849052838160448183875af1801561094f57908491610937575b50508c600854168a51868152308b8201528d818b81855afa90811561092d57918f918f908d8f95918d928a916108f0575b508a8111610713575b5050505050505087935061051d565b6107278597999b61074b929b97999b611de2565b9889938960035416998454169151968795869563a62d372560e01b87528601611daa565b0381875afa9182156108e557916108b8575b5060328102818104603214821517156108a4579061271061077f920490611de2565b90610e104201421161089157928f9594938b8f938c958f9160e4948b935198899788966345e709bf60e11b88528701528501528d6044850152610e1042016064850152608484015260c060a48401528160c48401525af1801561085857908c91610862575b5050885184815230898201528b8189818a5afa908115610858578491610823575b509061081361052a92611fa9565b83929150898d388e8a8d83610704565b809294508c8092503d8311610851575b61083d8183611cfe565b8101031261049257518c9290610813610805565b503d610833565b8a513d86823e3d90fd5b90809294503d831161088a575b6108798183611cfe565b81010312610492578b918a386107e4565b503d61086f565b50634e487b7160e01b8f5260118a52888ffd5b5050634e487b7160e01b8f5260118a52888ffd5b90508d81813d83116108de575b6108cf8183611cfe565b8101031261049257513861075d565b503d6108c5565b8d51903d90823e3d90fd5b9950505050869193508092503d8311610926575b61090e8183611cfe565b81010312610492578d8f94918e8a8d8f9551386106fb565b503d610904565b8c513d87823e3d90fd5b61094090611cb8565b61094b5782386106ca565b8280fd5b8b513d86823e3d90fd5b8c809295508194503d8311610985575b6109738183611cfe565b81010312610492578c91519238610693565b503d610969565b8a513d85823e3d90fd5b93505092508a82813d83116109c3575b6109b08183611cfe565b810103126104925786928d925138610517565b503d6109a6565b8092508a8092503d83116109f4575b6109e38183611cfe565b81010312610492578a9051386102ce565b503d6109d9565b6022906020608494519362461bcd60e51b85528401528201527f537461726761746553747261746567793a20616d6f756e74206e6f742076616c6044820152611a5960f21b6064820152fd5b90503461094b576020918260031936011261066a57610a64611ca2565b84546001600160a01b03939190610a7e9085163314611d5f565b85848060035416921694845186847fe36d79dcda63d47bee388b7dde8bba0b326a1b459889de48dc94dcf3504eda4b8580a3878160448186866008541663095ea7b360e01b998a84528b8401528160248401525af18015610b7957916044939189969593610b5c575b50876001600160601b0360a01b60035416176003556008541686519788958694855284015260001960248401525af1908115610b535750610b26578280f35b81610b4592903d10610b4c575b610b3d8183611cfe565b810190611f6e565b5038808280f35b503d610b33565b513d85823e3d90fd5b610b7290873d8911610b4c57610b3d8183611cfe565b5038610ae7565b86513d85823e3d90fd5b5050346101c957816003193601126101c957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101c957816003193601126101c957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b611d3c565b5050346101c957816003193601126101c95760015490516001600160a01b039091168152602090f35b5050346101c957816003193601126101c957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9190503461094b578260031936011261094b57610d099260018060a01b0392610caa848354163314611d5f565b818351610cb681611ce2565b526005548351632f607fdd60e01b815282810191825230602083810191909152967f0000000000000000000000000000000000000000000000000000000000000000871692889183918291604090910190565b0381855afa908115610ec3578491611208575b50610f0b575b60055484516393f1a40b60e01b8152838101828152306020820152909291908690849081906040010381855afa928315610f01578593610ed1575b50813b15610ecd5784916044839288519485938492630441a3e760e41b8452898401528760248401525af18015610ec35787918591610eac575b5050600654855163c4de93a560e01b815261ffff90911684820190815260208101939093523060408401529182908190606001038186897f0000000000000000000000000000000000000000000000000000000000000000165af18015610ea257908691610e79575b505047937f00000000000000000000000000000000000000000000000000000000000000001690813b1561094b578351630d0e30db60e41b81529183918391829088905af18015610e6f57610e58575b505051908152f35b610e628291611cb8565b610e6c5780610e50565b80fd5b83513d84823e3d90fd5b813d8311610e9b575b610e8c8183611cfe565b81010312610492578438610e00565b503d610e82565b84513d85823e3d90fd5b610eb7919250611cb8565b61094b57858338610d97565b85513d86823e3d90fd5b8480fd5b610ef2919350863d8811610efa575b610eea8183611cfe565b810190611f93565b509138610d5d565b503d610ee0565b86513d87823e3d90fd5b846008541684518088816370a0823160e01b94858252308883015260249485915afa9081156111fe5786916111d1575b50833b156111cd578651631c57762b60e31b8152600286820152828101879052868160448183895af1801561112a579087916111b9575b505087600854169087519084825230878301528a828581865afa9182156111af57908a9594939291899261117d575b50808211610fb5575b505050505050610d22565b610fbe91611de2565b88828c838a61100c8a60035416958b7f000000000000000000000000000000000000000000000000000000000000000016809c8454169151968795869563a62d372560e01b87528601611daa565b0381855afa908115611173578a91611146575b5060328102818104603214821517156111345790612710611041920490611de2565b610e104201804211611134578a8e949360e4938c938f5198899788966345e709bf60e11b88528701528a8601528b60448601526064850152608484015260c060a48401528160c48401525af1801561112a57908a9392916110fe575b50875180948193825230888301525afa8015610ec35784906110cf575b6110c49150611fa9565b843880808080610faa565b508681813d83116110f7575b6110e58183611cfe565b81010312610492576110c490516110ba565b503d6110db565b8391933d8311611123575b6111138183611cfe565b810103126104925788913861109d565b503d611109565b88513d89823e3d90fd5b634e487b7160e01b8b5260118a52858bfd5b90508c81813d831161116c575b61115d8183611cfe565b8101031261049257513861101f565b503d611153565b8b513d8c823e3d90fd5b955090508a85813d81116111a8575b6111968183611cfe565b81010312610492578994519038610fa1565b503d61118c565b89513d8a823e3d90fd5b6111c290611cb8565b6111cd578538610f72565b8580fd5b90508881813d83116111f7575b6111e88183611cfe565b81010312610492575138610f3b565b503d6111de565b87513d88823e3d90fd5b90508681813d831161122e575b61121f8183611cfe565b81010312610492575138610d1c565b503d611215565b90503461094b576020908160031936011261066a57602492826001600160a01b03611283337f00000000000000000000000000000000000000000000000000000000000000008316146122d2565b61128b61230d565b82516370a0823160e01b8152308582015295869182907f0000000000000000000000000000000000000000000000000000000000000000165afa801561136a57859061131d575b7f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca9450600954811161130e575b505190358152a1600160025580f35b61131790611fa9565b386112ff565b508284813d8311611363575b6113338183611cfe565b81010312610492577f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca93516112d2565b503d611329565b81513d87823e3d90fd5b5050346101c957816003193601126101c957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101c957816003193601126101c9576020906006549051908152f35b5050346101c957816003193601126101c957905490516001600160a01b039091168152602090f35b5050346101c957816003193601126101c9576020906005549051908152f35b5050346101c957816003193601126101c9576020906009549051908152f35b828434610e6c5780600319360112610e6c57508051906060820182811067ffffffffffffffff8211176114bc576114b893508152602b82527f537461726761746520737472617465677920666f722077726170706564206e6160208301526a746976652061737365747360a81b818301525191829182611c59565b0390f35b604184634e487b7160e01b6000525260246000fd5b5050346101c957816003193601126101c95760085490516001600160a01b039091168152602090f35b9190503461094b578260031936011261094b576001546001600160a01b0392909183831691903383900361156a5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b90503461094b57602036600319011261094b577f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc9035916115f860018060a01b038554163314611d5f565b6009548151908152836020820152a160095580f35b5050346101c957816003193601126101c95760209061162a611e05565b9051908152f35b90503461094b578260031936011261094b575490516001600160a01b03909116815260209150f35b5050346101c957816003193601126101c95760075490516001600160a01b039091168152602090f35b5050346101c957816003193601126101c9576020905160018152f35b5050346101c957816003193601126101c95760035490516001600160a01b039091168152602090f35b90503461094b576020918260031936011261066a5781359267ffffffffffffffff8411610ecd5736602385011215610ecd5784848401359461170886611d20565b9561171585519788611cfe565b8087526024963688838501011161066a578188869401848301370101526005548251632f607fdd60e01b81528481019182523060208301526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169690959290919084908290819060400103818a5afa9081156119bb578891611a9d575b506117a4578680f35b846008541687855197858985816370a0823160e01b96878252308a8301525afa988915611a93578299611a64575b50803b156101c95781906044885180948193631c57762b60e31b835260028a84015281898401525af18015611a5a57611a47575b508560085416968551908282523085830152858285818c5afa918215611a3d578a92611a0e575b5080821161183d575b5050508680f35b61184691611de2565b9686600354169761189386897f0000000000000000000000000000000000000000000000000000000000000000169987541689518093819263a62d372560e01b83528d88888d8601611daa565b03818d5afa908115611a04578b916119d7575b5060328102818104603214821517156119c557906127106118c8920490611de2565b98610e104201998a42116119c557918b60e4928995948b519d8e9687956345e709bf60e11b87528c8701528a8601528d60448601526064850152608484015260c060a48401528160c48401525af19687156119bb578495969761198f575b5085519687938492835230908301525afa918215610b535750839161195f575b506119519150611fa9565b388080808080808080611836565b905081813d8311611988575b6119758183611cfe565b8101031261049257611951905138611946565b503d61196b565b8491943d83116119b4575b6119a48183611cfe565b8101031261049257839238611926565b503d61199a565b85513d8a823e3d90fd5b634e487b7160e01b8c5260118752858cfd5b90508681813d83116119fd575b6119ee8183611cfe565b810103126104925751386118a6565b503d6119e4565b88513d8d823e3d90fd5b9091508581813d8311611a36575b611a268183611cfe565b810103126104925751903861182d565b503d611a1c565b87513d8c823e3d90fd5b611a5390989198611cb8565b9638611806565b86513d8b823e3d90fd5b9098508581813d8311611a8c575b611a7c8183611cfe565b810103126101c9575197386117d2565b503d611a72565b87513d84823e3d90fd5b90508381813d8311611ac7575b611ab48183611cfe565b81010312611ac357513861179b565b8780fd5b503d611aaa565b5050346101c957816003193601126101c95751908152602090f35b9190503461094b57606036600319011261094b57611b05611ca2565b91602435918215158303610ecd576044359283151584036111cd5760018060a01b03948591611b38838954163314611d5f565b15611bda571692831590811591611bd2575b5015611b975750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160601b0360a01b8092161782556001541660015580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038611b4a565b9350505050166001600160601b0360a01b600154161760015580f35b838534610e6c5780600319360112610e6c578183019083821067ffffffffffffffff831117611c4657506114b8935081526008825267537461726761746560c01b60208301525191829182611c59565b634e487b7160e01b815260418552602490fd5b6020808252825181830181905290939260005b828110611c8e57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501611c6c565b600435906001600160a01b038216820361049257565b67ffffffffffffffff8111611ccc57604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117611ccc57604052565b90601f8019910116810190811067ffffffffffffffff821117611ccc57604052565b67ffffffffffffffff8111611ccc57601f01601f191660200190565b34610492576000366003190112610492576020611d5761218a565b604051908152f35b15611d6657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9081526001600160a01b0391821660208201529181166040830152909116606082015260a06080820181905260009082015260c00190565b91908203918211611def57565b634e487b7160e01b600052601160045260246000fd5b600554604051632f607fdd60e01b81526004810191909152306024820152906001600160a01b03602080846044817f000000000000000000000000000000000000000000000000000000000000000086165afa938415611f3357600094611f3f575b5060009380611e7557505050565b828293949550600354168460085416856004541695611ecd6040519788958694859463a62d372560e01b86527f0000000000000000000000000000000000000000000000000000000000000000169160048601611daa565b03915afa908115611f3357600091611f07575b509050603281029080820460321481151715611def57612710611f04920490611de2565b90565b82813d8311611f2c575b611f1b8183611cfe565b81010312610e6c5750518038611ee0565b503d611f11565b6040513d6000823e3d90fd5b90938482813d8311611f67575b611f568183611cfe565b81010312610e6c5750519238611e67565b503d611f4c565b90816020910312610492575180151581036104925790565b91908201809211611def57565b9190826040910312610492576020825192015190565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690813b156104925760409182518091632e1a7d4d60e01b82528160246000948580948a60048401525af1801561218057612171575b5090807f000000000000000000000000000000000000000000000000000000000000000016803b1561094b57828591600486518094819363ed99530760e01b83525af18015610ea25790839161215d575b5050806020602492600754168551938480926370a0823160e01b82523060048301525afa918215610ea257839261212a575b507f00000000000000000000000000000000000000000000000000000000000000001690600554823b1561066a5790604484928387519586948593631c57762b60e31b8552600485015260248401525af18015610e6f57612116575b50507fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d39160209151908152a1565b6121208291611cb8565b610e6c57806120e8565b9091506020813d8211612155575b8161214560209383611cfe565b810103126104925751903861208c565b3d9150612138565b61216690611cb8565b6101c957813861205a565b61217a90611cb8565b38612009565b84513d84823e3d90fd5b604080516370a0823160e01b81523060048201529091906001600160a01b0390836020826024817f000000000000000000000000000000000000000000000000000000000000000087165afa9182156122c757600092612291575b5060055481516393f1a40b60e01b815260048101919091523060248201529283908180604481015b03917f0000000000000000000000000000000000000000000000000000000000000000165afa91821561228657611f049394600093612260575b505061225b90612255611e05565b92611f86565b611f86565b61225b929350908161227d92903d10610efa57610eea8183611cfe565b50919038612247565b84513d6000823e3d90fd5b9190506020823d82116122bf575b816122ac60209383611cfe565b81010312610e6c5750518361220d6121e5565b3d915061229f565b50513d6000823e3d90fd5b156122d957565b60405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606490fd5b600280541461231c5760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea264697066735822122023ba9cc0550550b346b8c434d7365c97b404e7e31b4485bb97a150c0857b019764736f6c63430008120033";

type StargateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateStrategy__factory extends ContractFactory {
  constructor(...args: StargateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _ethRouter: PromiseOrValue<string>,
    _lpStaking: PromiseOrValue<string>,
    _stakingPid: PromiseOrValue<BigNumberish>,
    _lpToken: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _stgEthPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _ethRouter,
      _lpStaking,
      _stakingPid,
      _lpToken,
      _swapper,
      _stgEthPool,
      overrides || {}
    ) as Promise<StargateStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _ethRouter: PromiseOrValue<string>,
    _lpStaking: PromiseOrValue<string>,
    _stakingPid: PromiseOrValue<BigNumberish>,
    _lpToken: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _stgEthPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _ethRouter,
      _lpStaking,
      _stakingPid,
      _lpToken,
      _swapper,
      _stgEthPool,
      overrides || {}
    );
  }
  override attach(address: string): StargateStrategy {
    return super.attach(address) as StargateStrategy;
  }
  override connect(signer: Signer): StargateStrategy__factory {
    return super.connect(signer) as StargateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateStrategyInterface {
    return new utils.Interface(_abi) as StargateStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateStrategy {
    return new Contract(address, _abi, signerOrProvider) as StargateStrategy;
  }
}
