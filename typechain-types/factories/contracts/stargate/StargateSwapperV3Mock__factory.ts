/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StargateSwapperV3Mock,
  StargateSwapperV3MockInterface,
} from "../../../contracts/stargate/StargateSwapperV3Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "queryAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100165761044e908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c80638bce137e146100a25763a62d37251461003657600080fd5b3461009e5760a036600319011261009e5761004f610309565b5061005861031f565b506064356001600160a01b03811603610099576084359267ffffffffffffffff8411610096575061008e60209336908401610389565b505190358152f35b80fd5b600080fd5b8280fd5b503461009e5760c036600319011261009e578135916100bf610309565b6100c761031f565b9467ffffffffffffffff60a43581811161009e576100e89036908601610389565b508451926020978885016323b872dd60e01b815260249533878201523060448201528960648201526064815260a08101818110868211176102f7578952516001600160a01b03938692839291839087165af16101426103d0565b816102c7575b5015610287571690813b1561009e578551637c928fe960e01b81528581018890528381868183875af1801561027d57610258575b50855163a9059cbb60e01b898201908152338683015260448083018a9052825291608082019081118282101761024457849392918491895251925af16101c06103d0565b81610214575b50156101d457505051908152f35b601c9085606494519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b8051801592508790831561022c575b505050386101c6565b61023c9350820181019101610400565b388681610223565b85604188634e487b7160e01b600052526000fd5b81819492941161026b578652913861017c565b634e487b7160e01b8252604186528482fd5b87513d86823e3d90fd5b6064868a87818b519362461bcd60e51b85528401528201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152fd5b8051801592508b9083156102df575b50505038610148565b6102ef9350820181019101610400565b388a816102d6565b634e487b7160e01b8752604189528787fd5b602435906001600160a01b038216820361009957565b604435906001600160a01b038216820361009957565b90601f8019910116810190811067ffffffffffffffff82111761035757604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161035757601f01601f191660200190565b81601f82011215610099578035906103a08261036d565b926103ae6040519485610335565b8284526020838301011161009957816000926020809301838601378301015290565b3d156103fb573d906103e18261036d565b916103ef6040519384610335565b82523d6000602084013e565b606090565b9081602091031261009957518015158103610099579056fea26469706673582212201b32bab98b6c51dcd6eaedabde807bd2cc1047e8fd69d374e4f3a122f5e5f2af64736f6c63430008120033";

type StargateSwapperV3MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateSwapperV3MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateSwapperV3Mock__factory extends ContractFactory {
  constructor(...args: StargateSwapperV3MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateSwapperV3Mock> {
    return super.deploy(overrides || {}) as Promise<StargateSwapperV3Mock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StargateSwapperV3Mock {
    return super.attach(address) as StargateSwapperV3Mock;
  }
  override connect(signer: Signer): StargateSwapperV3Mock__factory {
    return super.connect(signer) as StargateSwapperV3Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateSwapperV3MockInterface {
    return new utils.Interface(_abi) as StargateSwapperV3MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateSwapperV3Mock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StargateSwapperV3Mock;
  }
}
