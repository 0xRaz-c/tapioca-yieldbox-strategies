/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StargateRouterMock,
  StargateRouterMockInterface,
} from "../../../contracts/stargate/StargateRouterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stgToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amountLP",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "instantRedeemLocal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stgToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161044a38038061044a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103b7806100936000396000f3fe60806040526004361061002d5760003560e01c80639afb25de14610039578063c4de93a51461007657600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561008257600080fd5b506100966100913660046102c8565b6100a4565b60405190815260200161006d565b600080546100bd906001600160a01b03163330866100cf565b6100c782846101f8565b509092915050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610133919061031d565b6000604051808303816000865af19150503d8060008114610170576040519150601f19603f3d011682016040523d82523d6000602084013e610175565b606091505b509150915081801561019f57508051158061019f57508080602001905181019061019f9190610358565b6101f05760405162461bcd60e51b815260206004820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c656460448201526064015b60405180910390fd5b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051610222919061031d565b60006040518083038185875af1925050503d806000811461025f576040519150601f19603f3d011682016040523d82523d6000602084013e610264565b606091505b50509050806102c35760405162461bcd60e51b815260206004820152602560248201527f537461726761746553747261746567793a20455448207472616e736665722066604482015264185a5b195960da1b60648201526084016101e7565b505050565b6000806000606084860312156102dd57600080fd5b833561ffff811681146102ef57600080fd5b92506020840135915060408401356001600160a01b038116811461031257600080fd5b809150509250925092565b6000825160005b8181101561033e5760208186018101518583015201610324565b8181111561034d576000828501525b509190910192915050565b60006020828403121561036a57600080fd5b8151801515811461037a57600080fd5b939250505056fea26469706673582212207401a03bbbdc48f623f3aa3d6147194d1f2d134c670e550e0d6f58772d47791464736f6c634300080f0033";

type StargateRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateRouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateRouterMock__factory extends ContractFactory {
  constructor(...args: StargateRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stgToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateRouterMock> {
    return super.deploy(
      _stgToken,
      overrides || {}
    ) as Promise<StargateRouterMock>;
  }
  override getDeployTransaction(
    _stgToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stgToken, overrides || {});
  }
  override attach(address: string): StargateRouterMock {
    return super.attach(address) as StargateRouterMock;
  }
  override connect(signer: Signer): StargateRouterMock__factory {
    return super.connect(signer) as StargateRouterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateRouterMockInterface {
    return new utils.Interface(_abi) as StargateRouterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateRouterMock {
    return new Contract(address, _abi, signerOrProvider) as StargateRouterMock;
  }
}
