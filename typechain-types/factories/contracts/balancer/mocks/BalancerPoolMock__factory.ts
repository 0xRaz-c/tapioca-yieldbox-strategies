/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BalancerPoolMock,
  BalancerPoolMockInterface,
} from "../../../../contracts/balancer/mocks/BalancerPoolMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160604081815234620005c8576200001882620005cd565b600f8252602091828101916e42616c616e6365506f6f6c4d6f636b60881b83528051936200004685620005cd565b60049081865263424c504d60e01b818701528251956200006687620005cd565b6001808852603160f81b8389019081528651926001600160401b039290838511620005b35760038054958387811c97168015620005a8575b888810146200059357601f9687811162000548575b508088888211600114620004d557600091620004c9575b5060001982841b1c191690841b1781555b815191858311620004b45788548481811c91168015620004a9575b89821014620004945787811162000449575b508790878411600114620003de57938394918492600095620003d2575b50501b92600019911b1c19161785555b620001408762000648565b97610120988952620001528a62000822565b97610140988952519020988960e05251902061010098818a524660a052865191858301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528884015260608301524660808301523060a083015260a0825260c082019282841090841117620003bd57828752815190206080523060c052620001dc33620005ff565b600c805460ff19166012179055683635c9adc5dea00000600b55600954336001600160a01b0391909116036200037c57505033156200032c576200022033620005ff565b3015620002ed57506002546a52b7d2dcc80cd2e400000092838201809211620002d857506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025530835282815284832084815401905584519384523093a38361ff0019600c541617600c55519161182b9384620009db8539608051846114aa015260a05184611576015260c05184611474015260e051846114f90152518361151f0152518261071d015251816107470152f35b601190634e487b7160e01b6000525260246000fd5b90606493519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b907f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726101046064938662461bcd60e51b85528060c483015260e48201520152fd5b604186634e487b7160e01b6000525260246000fd5b01519350388062000125565b9190601f198416928a600052848a6000209460005b8c8983831062000431575050501062000416575b50505050811b01855562000135565b01519060f884600019921b161c191690553880808062000407565b868601518955909701969485019488935001620003f3565b89600052886000208880860160051c8201928b87106200048a575b0160051c019085905b8281106200047d57505062000108565b600081550185906200046d565b9250819262000464565b60228a634e487b7160e01b6000525260246000fd5b90607f1690620000f6565b604189634e487b7160e01b6000525260246000fd5b90508b015138620000ca565b8592508c90601f198316856000528b600020928c6000915b838310620005265750505083116200050d575b5050811b018155620000db565b8d015160001983861b60f8161c19169055388062000500565b948482949597989293960151815501940192019087949392918f8d90620004ed565b82600052886000208880840160051c8201928b851062000589575b0160051c019085905b8281106200057c575050620000b3565b600081550185906200056c565b9250819262000563565b602289634e487b7160e01b6000525260246000fd5b96607f16966200009e565b604187634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b03821117620005e957604052565b634e487b7160e01b600052604160045260246000fd5b600980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b80516020919082811015620006e7575090601f8251116200068657808251920151908083106200067757501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620006cd575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620006a9565b6001600160401b038111620005e9576005928354926001938481811c9116801562000817575b838210146200080157601f8111620007ca575b5081601f841160011462000760575092829391839260009462000754575b50501b916000199060031b1c191617905560ff90565b0151925038806200073e565b919083601f1981168760005284600020946000905b88838310620007af575050501062000795575b505050811b01905560ff90565b015160001960f88460031b161c1916905538808062000788565b85870151885590960195948501948793509081019062000775565b8560005284601f846000209201871c820191601f8601881c015b828110620007f457505062000720565b60008155018590620007e4565b634e487b7160e01b600052602260045260246000fd5b90607f16906200070d565b805160209081811015620008b05750601f8251116200084f57808251920151908083106200067757501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000896575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000872565b906001600160401b038211620005e957600654926001938481811c91168015620009cf575b838210146200080157601f811162000995575b5081601f84116001146200092957509282939183926000946200091d575b50501b916000199060031b1c19161760065560ff90565b01519250388062000906565b919083601f198116600660005284600020946000905b888383106200097a575050501062000960575b505050811b0160065560ff90565b015160001960f88460031b161c1916905538808062000952565b8587015188559096019594850194879350908101906200093f565b600660005284601f84600020920160051c820191601f860160051c015b828110620009c2575050620008e8565b60008155018590620009b2565b90607f1690620008d556fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816306fdde0314610e0d57508063095ea7b314610de357806318160ddd14610dc45780631d0dc26714610d8c57806321442ec914610d5457806322ae81af14610d3657806323b872dd14610c6c5780632e1a7d4d14610acc578063313ce56714610aaa5780633644e51514610a865780633950935114610a36578063449a52f814610a09578063679aefce146109e657806370a08231146109af578063715018a6146109525780637c928fe91461085b5780637ecebe001461082357806384b0196e146107065780638da5cb5b146106dd57806395d89b41146105f3578063996517cf146105d4578063a457c2d71461052d578063a9059cbb146104fc578063d0e30db0146104b8578063d4a744ba14610491578063d505accf146102db578063d6b5a2db146102b1578063dd62ed3e14610268578063e01d55c5146102425763f2fde38b03610011573461023e57602036600319011261023e5761018d610f1e565b90610196610f4f565b6001600160a01b039182169283156101ec575050600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b8382346102645760203660031901126102645761025d610f4f565b35600b5580f35b5080fd5b50503461026457806003193601126102645780602092610286610f1e565b61028e610f39565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b838234610264576020366003190112610264576102d8906102d0610f4f565b353330611058565b80f35b508290346102645760e0366003190112610264576102f7610f1e565b6102ff610f39565b906044359260643560843560ff8116810361048d5781421161044a5760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610437578b525190206103e2916103da916103b4611471565b908c519161190160f01b83526002830152602282015260c43591604260a43592206113e2565b9190916112c8565b16036103f457506102d89394506111c6565b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50503461026457816003193601126102645760209060ff600c5460081c1690519015158152f35b505081600319360112610264576104cf3433611752565b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a280f35b50503461026457806003193601126102645760209061052661051c610f1e565b6024359033611058565b5160018152f35b5082346105d157826003193601126105d157610547610f1e565b918360243592338152600160205281812060018060a01b03861682526020522054908282106105805760208561052685850387336111c6565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b505034610264578160031936011261026457602090600b549051908152f35b50903461023e578260031936011261023e578051918381549061061582610fa7565b808652926001928084169081156106b25750600114610656575b6106528686610640828b0383611013565b51918291602083526020830190610ede565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82861061069a5750505061064082602061065295820101943861062f565b8054602087870181019190915290950194810161067c565b905061065297508693506020925061064094915060ff191682840152151560051b820101943861062f565b50503461026457816003193601126102645760095490516001600160a01b039091168152602090f35b50903461023e578260031936011261023e576107417f000000000000000000000000000000000000000000000000000000000000000061159c565b9261076b7f0000000000000000000000000000000000000000000000000000000000000000611698565b908251926020928385019585871067ffffffffffffffff881117610810575092806107c68388966107b9998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610ede565b91898303908a0152610ede565b924660608801523060808801528460a088015286840360c088015251928381520193925b8281106107f957505050500390f35b8351855286955093810193928101926001016107ea565b634e487b7160e01b845260419052602483fd5b5050346102645760203660031901126102645760209181906001600160a01b0361084b610f1e565b1681526007845220549051908152f35b508290346102645760203660031901126102645780359060ff600c5460081c16610899575b506102d89192338452600a602052429084205533611752565b600b54821161090f57338352600a602052838320546201518081018091116108fc5742101561088057606490602085519162461bcd60e51b8352820152601460248201527345524332304d6f636b3a20746f6f206561726c7960601b6044820152fd5b634e487b7160e01b845260118252602484fd5b606490602085519162461bcd60e51b8352820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152fd5b83346105d157806003193601126105d15761096b610f4f565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102645760203660031901126102645760209181906001600160a01b036109d7610f1e565b16815280845220549051908152f35b50503461026457816003193601126102645760209051670de0b6b3a76400008152f35b505034610264573660031901126105d1576102d8610a25610f1e565b610a2d610f4f565b60243590611752565b505034610264578060031936011261026457610526602092610a7f610a59610f1e565b338352600186528483206001600160a01b03821684528652918490205460243590611035565b90336111c6565b505034610264578160031936011261026457602090610aa3611471565b9051908152f35b50503461026457816003193601126102645760209060ff600c54169051908152f35b503461023e57602080600319360112610c6857813591338552848252828486205410610c3f573315610bf4573385528482528385205490838210610ba657508290338652858352038385205581600254036002558383518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833392a38380838015610b9c575b8280929181923390f115610b90577f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659192519283523392a280f35b505051903d90823e3d90fd5b6108fc9150610b55565b845162461bcd60e51b8152908101839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60849184519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b60649184519162461bcd60e51b8352820152600560248201526422b93937b960d91b6044820152fd5b8380fd5b5082903461026457606036600319011261026457610c88610f1e565b610c90610f39565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610cca575b602086610526878787611058565b848210610cf35750918391610ce860209695610526950333836111c6565b919394819350610cbc565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461026457816003193601126102645760209051620151808152f35b5050346102645760203660031901126102645760209181906001600160a01b03610d7c610f1e565b168152600a845220549051908152f35b83346105d157806003193601126105d157610da5610f4f565b600c5461ff0060ff8260081c161560081b169061ff00191617600c5580f35b5050346102645781600319360112610264576020906002549051908152f35b505034610264578060031936011261026457602090610526610e03610f1e565b60243590336111c6565b8490843461023e578260031936011261023e5782600354610e2d81610fa7565b80855291600191808316908115610eb65750600114610e59575b50505061064082610652940383611013565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610e9e575050506106408260206106529582010194610e47565b80546020878701810191909152909501948101610e81565b61065297508693506020925061064094915060ff191682840152151560051b82010194610e47565b919082519283825260005b848110610f0a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ee9565b600435906001600160a01b0382168203610f3457565b600080fd5b602435906001600160a01b0382168203610f3457565b6009546001600160a01b03163303610f6357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c92168015610fd7575b6020831014610fc157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fb6565b6040810190811067ffffffffffffffff821117610ffd57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610ffd57604052565b9190820180921161104257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156111735716918215611122576000828152806020526040812054918083106110ce57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561127757169182156112275760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60058110156113cc57806112d95750565b600181036113265760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036113735760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461137c57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116114655791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156114585781516001600160a01b03811615611452579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611573575b156114cc577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610ffd5760405251902090565b507f000000000000000000000000000000000000000000000000000000000000000046146114a3565b60ff81146115da5760ff811690601f82116115c857604051916115be83610fe1565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516005548160006115ed83610fa7565b808352926001908181169081156116765750600114611617575b5061161492500382611013565b90565b6005600090815291507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b84831061165b5750611614935050810160200138611607565b81935090816020925483858901015201910190918492611642565b90506020925061161494915060ff191682840152151560051b82010138611607565b60ff81146116ba5760ff811690601f82116115c857604051916115be83610fe1565b506040516006548160006116cd83610fa7565b8083529260019081811690811561167657506001146116f3575061161492500382611013565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8483106117375750611614935050810160200138611607565b8193509081602092548385890101520191019091849261171e565b6001600160a01b03169081156117b0577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082611794600094600254611035565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fdfea2646970667358221220cc16095a5987211d02f220602e35e9e9d25841e62c0cf05fcaa7c5e1806a49d364736f6c63430008120033";

type BalancerPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerPoolMock__factory extends ContractFactory {
  constructor(...args: BalancerPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerPoolMock> {
    return super.deploy(overrides || {}) as Promise<BalancerPoolMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerPoolMock {
    return super.attach(address) as BalancerPoolMock;
  }
  override connect(signer: Signer): BalancerPoolMock__factory {
    return super.connect(signer) as BalancerPoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerPoolMockInterface {
    return new utils.Interface(_abi) as BalancerPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerPoolMock {
    return new Contract(address, _abi, signerOrProvider) as BalancerPoolMock;
  }
}
